<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Vue之网易云音乐PC版轮播图的实现]]></title>
    <url>%2F2018%2F06%2F25%2Fnetease-slider%2F</url>
    <content type="text"><![CDATA[最近在刷网易云音乐歌单时发现首页的轮播图很有意思，正好自己想尝试做一个PC版的网易云音乐，于是就是使用Vue去做这个demo，废话少说，我要出招了，接招吧 页面的DOM结构123456789101112131415161718192021&lt;template&gt; &lt;div class="slider-container" ref='slider' :style="sliderStyle" @mouseover="pause()" @mouseout="play()"&gt; &lt;div class="slider-content" :class="mask ? 'mask' : ''"&gt; &lt;div class="slider" v-for="(item, index) in list" :key="index" :class="setClass(index)" @click="onClick(index)" :style="setBGImg(item.src)"&gt; &lt;/div&gt; &lt;i v-show="arrow" class="iconfont icon-left" @click="prev()"&gt;&lt;/i&gt; &lt;i v-show="arrow" class="iconfont icon-right" @click="next()"&gt;&lt;/i&gt; &lt;/div&gt; &lt;div class="dots" v-if="dots"&gt; &lt;span v-for="(item, index) in list" :key="index" :style="setActiveDot(index)" @mouseover="currentIndex = index"&gt;&lt;/span&gt; &lt;/div&gt; &lt;/div&gt;&lt;/template&gt; Slider-container的样式(Stylus)123456.slider-container width: 100% height: 100% text-align: center padding: 10px 0 position: relative 这个子组件主要分为两块。 轮播图，其中它们的业务逻辑是 自动切换 左右icon切换轮播图 点击前后轮播图切换轮播图 鼠标滑动到轮播图停止轮播，离开后继续轮播 Slider-content的DOM结构123456789&lt;div class="slider-content" :class="mask ? 'mask' : ''"&gt; &lt;div class="slider" v-for="(item, index) in list" :key="index" :class="setClass(index)" @click="onClick(index)" :style="setBGImg(item.src)"&gt; &lt;/div&gt; &lt;i v-show="arrow" class="iconfont icon-left" @click="prev()"&gt;&lt;/i&gt; &lt;i v-show="arrow" class="iconfont icon-right" @click="next()"&gt;&lt;/i&gt;&lt;/div&gt; Slider-content的样式(Stylus)12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667.slider-content position: relative width: 100% height: calc(100% - 20px) left: 0% top: 0% margin: 0px padding: 0px background-size: inherit .slider position: absolute margin: 0 padding: 0 top: 0 left: 50% width: 65% height: 100% transition: 500ms all ease-in-out background-color: #fff background-repeat: no-repeat background-position: center background-size: inherit transform: translate3d(-50%,0,-80px) z-index: 1 &amp;:before position: absolute content: "" width: 100% height: 100% top: 0 left: 0 background-color: rgba(0, 0, 0, 0) transition-delay: 100ms!important transition: all 500ms cursor: pointer &amp;.active transform: translate3d(-50%, 0, 0) z-index: 20 &amp;.prev transform: translate3d(-75%, 0, -100px) z-index: 19 &amp;.next transform: translate3d(-25%, 0, -100px) z-index: 18 i width: 17.5% display: none position: absolute top: 40% font-size: 22px color: rgba(255, 255, 255, 0.5) text-shadow: 0 0 24px rgba(0, 0, 0, 0.3) cursor: pointer z-index: 21 &amp;:first-child left: 0 &amp;:last-child right: 0 &amp;:hover i color: rgba(255, 255, 255, 0.8) display: block &amp;.mask .slider &amp;.prev, &amp;.next &amp;:before background-color: rgba(0, 0, 0, 0.50) 底部的dot， 其中它们的业务逻辑是 当前轮播图对应位置的dot高亮 鼠标移动到相应的dot上切换对应位置的轮播图 Dots的DOM结构12345&lt;div class="dots" v-if="dots"&gt; &lt;span v-for="(item, index) in list" :key="index" :style="setActiveDot(index)" @mouseover="currentIndex = index"&gt;&lt;/span&gt;&lt;/div&gt; Dots的样式(Stylus)123456789.dots width: 100% height: 20px span display: inline-block width: 20px height: 2px margin: 1px 3px cursor: pointer 上面是页面的DOM结构和表现的实现代码，接下来我们要讲的是连招的实现，小心啦，我要摸眼W + R3了。上面我们讲到轮播图的业务逻辑，接下来，我们就讲讲如何实现的的吧 自动轮播12345678play () &#123; this.pause(); if (this.autoPlay) &#123; this.timer = setInterval(()=&gt;&#123; this.next(); &#125;, this.interval) &#125;&#125; 暂停轮播123pause () &#123; clearInterval(this.timer);&#125; Icon切换轮播图123456next () &#123; this.currentIndex = ++this.currentIndex % this.list.length;&#125;,prev () &#123; this.currentIndex = this.currentIndex === 0 ? this.list.length - 1 : this.currentIndex - 1;&#125;, 前后轮播图的切换轮播图12345678910111213onClick (i) &#123; if (i === this.currentIndex)&#123; this.$emit('sliderClick', i); &#125; else &#123; let currentClickClassName = this.sliderDomList[i].className.split(' ')[1] console.log(currentClickClassName) if (currentClickClassName === 'next') &#123; this.next() &#125; else &#123; this.prev() &#125; &#125;&#125; dots轮播图的切换轮播图这里比较简单，只需要设置它的鼠标事件即可1@mouseover="currentIndex = index" 到这里，基本上我们提出的业务逻辑原理都已经实现了，到时候我会将代码整理完了commit到github上，现在正在整理ing，谢谢。]]></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Vue</tag>
        <tag>网易云音乐</tag>
        <tag>轮播图</tag>
      </tags>
  </entry>
</search>
