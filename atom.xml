<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小超子的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://rain120.github.io/"/>
  <updated>2018-08-11T08:52:32.082Z</updated>
  <id>https://rain120.github.io/</id>
  
  <author>
    <name>小超子</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vue实现左右菜单联动实现</title>
    <link href="https://rain120.github.io/2018/08/11/cascade-menu/"/>
    <id>https://rain120.github.io/2018/08/11/cascade-menu/</id>
    <published>2018-08-11T08:31:34.000Z</published>
    <updated>2018-08-11T08:52:32.082Z</updated>
    
    <content type="html"><![CDATA[<!-- [知乎](https://www.zhihu.com/people/yan-yang-nian-hua-120/activities)[个人博客](https://rain120.github.io/)[Github](https://github.com/Rain120)--><p>之前在外卖软件上看到这个左右联动的效果，觉得很有意思，所以就尝试使用<code>Vue</code>来实现，将这个联动抽离成为一个单独的组件，废话少说，先来一张效果图。</p><p><img src="https://pic4.zhimg.com/v2-1be68c838d4d382a171815108d7cb13d_b.gif" alt="Vue实现左右菜单联动效果图"></p><p>这个组件分为两个部分，1、左菜单；2、右菜单。<br>左菜单的<code>DOM</code>结构<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;scroll</span><br><span class="line">  <span class="keyword">class</span>=<span class="string">"left-menu"</span></span><br><span class="line">  :data=<span class="string">"leftMenu"</span></span><br><span class="line">  <span class="keyword">ref</span>=<span class="string">"leftMenu"</span>&gt;</span><br><span class="line">  &lt;div <span class="keyword">class</span>=<span class="string">"left-menu-container"</span>&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &lt;li</span><br><span class="line">        <span class="keyword">class</span>=<span class="string">"left-item"</span></span><br><span class="line">        <span class="keyword">ref</span>=<span class="string">"leftItem"</span></span><br><span class="line">        :<span class="keyword">class</span>=<span class="string">"&#123;'current': currentIndex === index&#125;"</span></span><br><span class="line">        @click=<span class="string">"selectLeft(index, $event)"</span></span><br><span class="line">        v-<span class="keyword">for</span>=<span class="string">"(item, index) in leftMenu"</span></span><br><span class="line">        :key=<span class="string">"index"</span>&gt;</span><br><span class="line">        &lt;p <span class="keyword">class</span>=<span class="string">"text"</span>&gt;&#123;&#123;item&#125;&#125;&lt;/p&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/scroll&gt;</span><br></pre></td></tr></table></figure></p><p>右菜单的<code>DOM</code>结构</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;scroll</span><br><span class="line">  <span class="built_in">class</span>=<span class="string">"right-menu"</span></span><br><span class="line">  :data=<span class="string">"rightMenu"</span> </span><br><span class="line">  <span class="keyword">ref</span>=<span class="string">"rightMenu"</span></span><br><span class="line">  @scroll=<span class="string">"scrollHeight"</span></span><br><span class="line">  :listenScroll=<span class="string">"true"</span></span><br><span class="line">  :probeType=<span class="string">"3"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"right-menu-container"</span>&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &lt;li <span class="built_in">class</span>=<span class="string">"right-item"</span> <span class="keyword">ref</span>=<span class="string">"rightItem"</span> v-<span class="keyword">for</span>=<span class="string">"(items, i) in rightMenu"</span> :key=<span class="string">"i"</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"data-wrapper"</span>&gt;</span><br><span class="line">          &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"title"</span>&gt;&#123;&#123;items.title&#125;&#125;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">          &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"data"</span> v-<span class="keyword">for</span>=<span class="string">"(item, j) in items.data"</span> :key=<span class="string">"j"</span>&gt;&#123;&#123;<span class="built_in">item</span>&#125;&#125;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">        &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/scroll&gt;</span><br></pre></td></tr></table></figure><p>这里是为了做<code>demo</code>，所以在数据上只是单纯捏造。</p><p>当然因为这是个子组件，我们将通过父组件传递<code>props</code>，所以定义<code>props</code><br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">props: &#123;</span><br><span class="line">  leftMenu: &#123;</span><br><span class="line">    required: <span class="literal">true</span>,</span><br><span class="line">    type: Array,</span><br><span class="line">   <span class="built_in"> default </span>() &#123;</span><br><span class="line">      return []</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  rightMenu: &#123;</span><br><span class="line">    required: <span class="literal">true</span>,</span><br><span class="line">    type: Array,</span><br><span class="line">   <span class="built_in"> default </span>() &#123;</span><br><span class="line">      return []</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="https://pic4.zhimg.com/80/v2-f8d582572c5fd3db84407049567c2707_hd.jpg" alt="原理图"></p><p>在这个业务场景中，我们的实现方式是根据右边菜单滚动的高度来计算左边菜单的位置，当然左边菜单也可以通过点击来确定右边菜单需要滚动多高的距离，那么我们如何获得该容器滚动的距离呢？<br>之前一直在使用<a href="https://ustbhuangyi.github.io/better-scroll/doc/zh-hans/" target="_blank" rel="noopener">better-scroll</a>，通过阅读文档，我们知道它有有<code>scroll</code>事件，我们可以通过监听这个事件来获取滚动的<code>pos</code><br><img src="https://pic4.zhimg.com/80/v2-8314099bddcbca367e681d91cff0c31e_hd.jpg" alt="scroll事件"><br><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.listenScroll) &#123;</span><br><span class="line">  let me = <span class="keyword">this</span></span><br><span class="line">  <span class="keyword">this</span>.scroll.<span class="literal">on</span>(<span class="string">'scroll'</span>, <span class="function"><span class="params">(pos)</span> =&gt;</span> &#123;</span><br><span class="line">    me.$emit(<span class="string">'scroll'</span>, pos)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>所以我们在右边菜单的<code>scroll</code>组件上监听<a href="https://ustbhuangyi.github.io/better-scroll/doc/zh-hans/events.html#scroll" target="_blank" rel="noopener">scroll</a>事件<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@scroll</span>=<span class="string">"scrollHeight"</span></span><br></pre></td></tr></table></figure></p><p>method<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">scrollHeight (pos) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(pos);</span><br><span class="line">  <span class="keyword">this</span>.scrollY = <span class="built_in">Math</span>.abs(<span class="built_in">Math</span>.round(pos.y))</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></p><p>我们将监听得到的pos打出来看看<br><img src="https://pic1.zhimg.com/v2-f7d5ad220a8a59de9bafb13a1a5cd8e6_b.gif" alt="监听scroll事件，得到pos"></p><p>我们可以看到控制台打出了当前滚动的pos信息，因为在移动端开发时，坐标轴和我们数学中的坐标轴相反，所以上滑时y轴的值是负数，<br><img src="https://pic2.zhimg.com/80/v2-ae8ae267d647dedb5245ffc242c42a46_hd.jpg" alt="移动开发坐标轴"></p><p>所以我们要得到每一块<code>li</code>的高度,我们可以通过拿到他们的<code>DOM</code><br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> _calculateHeight() &#123;</span><br><span class="line">  <span class="built_in">let</span> lis = this.$refs.rightItem;</span><br><span class="line">  <span class="built_in">let</span> <span class="built_in">height</span> = <span class="number">0</span></span><br><span class="line">  this.rightHeight.<span class="built_in">push</span>(<span class="built_in">height</span>)</span><br><span class="line">  Array.prototype.slice.call(lis).forEach(<span class="built_in">li</span> =&gt; &#123;</span><br><span class="line">    <span class="built_in">height</span> += <span class="built_in">li</span>.clientHeight</span><br><span class="line">    this.rightHeight.<span class="built_in">push</span>(<span class="built_in">height</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">console.<span class="built_in">log</span>(this.rightHeight)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>我们在<code>created</code>这个<code>hook</code>之后调用这个计算高度的函数<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> _calculateHeight() &#123;</span><br><span class="line">  <span class="built_in">let</span> lis = this.$refs.rightItem;</span><br><span class="line">  <span class="built_in">let</span> <span class="built_in">height</span> = <span class="number">0</span></span><br><span class="line">  this.rightHeight.<span class="built_in">push</span>(<span class="built_in">height</span>)</span><br><span class="line">  Array.prototype.slice.call(lis).forEach(<span class="built_in">li</span> =&gt; &#123;</span><br><span class="line">    <span class="built_in">height</span> += <span class="built_in">li</span>.clientHeight</span><br><span class="line">    this.rightHeight.<span class="built_in">push</span>(<span class="built_in">height</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">  console.<span class="built_in">log</span>(this.rightHeight)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="https://pic4.zhimg.com/80/v2-ca14da2c0b4c7079ab1c836636643ea9_hd.jpg" alt="得到右边菜单高度"></p><p>当用户在滚动时，我们需要计算当前滚动距离实在那个区间内，并拿到他的<code>index</code></p><p><img src="https://pic1.zhimg.com/80/v2-c329983d1fe00846c6be00d1f5c61abd_hd.jpg" alt="找到滚动位置对应的index"><br><img src="https://pic4.zhimg.com/80/v2-dd26b7225ea6e0e15479a969a1e15105_hd.jpg" alt="找到滚动位置对应的index"></p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">  currentIndex () &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; scrollY, rightHeight &#125; = this</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">index</span> = rightHeight.findIndex((height, <span class="keyword">index</span>) =&gt; &#123;</span><br><span class="line">      <span class="keyword">return</span> scrollY &gt;= rightHeight[<span class="keyword">index</span>] &amp;&amp; scrollY &lt; rightHeight[<span class="keyword">index</span> + <span class="number">1</span>]</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">index</span> &gt; <span class="number">0</span> ? <span class="keyword">index</span> : <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以当前应该是左边菜单<code>index = 1</code>的菜单项<code>active</code><br>以上是左边菜单根据右边菜单的滑动联动的实现，用户也可以通过点击左边菜单来实现右边菜单的联动，此时，我们给菜单项加上<code>click事件</code><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">click</span>="<span class="keyword">selectLeft</span>(<span class="keyword">index</span>, $event)<span class="string">"</span></span><br></pre></td></tr></table></figure></p><p>这里加上<code>$event</code>是为了区分原生点击事件还是<a href="(https://ustbhuangyi.github.io/better-scroll/doc/zh-hans/">better-scroll</a>派发的事件<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">selectLeft (index, <span class="keyword">event</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="keyword">event</span>._constructed) &#123;</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> rightItem = <span class="keyword">this</span>.$refs.rightItem</span><br><span class="line">  <span class="keyword">let</span> el = rightItem[index]</span><br><span class="line">  <span class="keyword">this</span>.$refs.rightMenu.scrollToElement(el, <span class="number">300</span>)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></p><p>到这里我们就基本上完成了这些需求了<br>源码传送门：<a href="https://github.com/Rain120/vue-study/blob/master/my-project/src/components/cascad-menu.vue" target="_blank" rel="noopener">Rain120/vue-study</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- 
[知乎](https://www.zhihu.com/people/yan-yang-nian-hua-120/activities)

[个人博客](https://rain120.github.io/)

[Github](https://github.com/R
      
    
    </summary>
    
    
      <category term="Vue" scheme="https://rain120.github.io/tags/Vue/"/>
    
      <category term="左右联动" scheme="https://rain120.github.io/tags/%E5%B7%A6%E5%8F%B3%E8%81%94%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>Typescript尝试</title>
    <link href="https://rain120.github.io/2018/07/21/typescript-essay/"/>
    <id>https://rain120.github.io/2018/07/21/typescript-essay/</id>
    <published>2018-07-21T09:50:34.000Z</published>
    <updated>2018-07-21T10:45:23.889Z</updated>
    
    <content type="html"><![CDATA[<!-- [知乎](https://www.zhihu.com/people/yan-yang-nian-hua-120/activities)[个人博客](https://rain120.github.io/)[Github](https://github.com/Rain120) --><p>最近入职，发现公司使用到typescript，所以就在此留下一个笔记，方便自己和大家一起学习。</p><p><a href="https://www.tslang.cn/index.html" target="_blank" rel="noopener">TypeScript</a>是一种由微软开发的自由和开源的编程语言。它是JavaScript的一个严格超集，并添加了可选的静态类型和基于类的面向对象编程。</p><p>大家日常学习可以去<a href="http://www.typescriptlang.org/play/index.html" target="_blank" rel="noopener">TS Playground</a>测试一些代码</p><p>那我们就来开始学习吧！</p><h3 id="基本类型的定义"><a href="#基本类型的定义" class="headerlink" title="基本类型的定义"></a>基本类型的定义</h3><p>在使用TS之前，我们定义的JavaScript变量都是弱类型语言，它不像C，Java这种，会在编译的时候对变量进行类型检查，所以有的时候会出现意想不到的Bug。</p><p>使用TS我们可以处理很简单的数据类型：</p><h3 id="Boolean类型"><a href="#Boolean类型" class="headerlink" title="Boolean类型"></a>Boolean类型</h3><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// <span class="built_in">boolean</span></span><br><span class="line">let isEmpty: <span class="built_in">boolean</span> = <span class="literal">true</span>;</span><br><span class="line">// <span class="keyword">Type</span> '<span class="string">"false"</span>' <span class="keyword">is</span> <span class="keyword">not</span> assignable <span class="keyword">to</span> <span class="keyword">type</span> <span class="symbol">'boolean</span>'.</span><br><span class="line">isEmpty = <span class="symbol">'false</span>'; </span><br><span class="line">isEmpty = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><h3 id="Number类型"><a href="#Number类型" class="headerlink" title="Number类型"></a>Number类型</h3><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// number</span><br><span class="line">let num: number = <span class="number">10</span>;</span><br><span class="line">// <span class="keyword">Type</span> '<span class="string">"1"</span>' <span class="keyword">is</span> <span class="keyword">not</span> assignable <span class="keyword">to</span> <span class="keyword">type</span> <span class="symbol">'number</span>'.</span><br><span class="line">num = <span class="string">'1'</span>;</span><br><span class="line">num = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h3 id="String类型"><a href="#String类型" class="headerlink" title="String类型"></a>String类型</h3><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// string</span></span><br><span class="line"><span class="keyword">let</span> github_name: <span class="keyword">string</span>;</span><br><span class="line">github_name = <span class="number">120</span>;</span><br><span class="line">github_name = <span class="string">'Rain120'</span>;</span><br></pre></td></tr></table></figure><h3 id="Array类型"><a href="#Array类型" class="headerlink" title="Array类型"></a>Array类型</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// array</span></span><br><span class="line"><span class="keyword">let</span> arr: <span class="built_in">number</span>[];</span><br><span class="line">arr = [<span class="number">1</span>, <span class="string">'2'</span>, <span class="number">3</span>];</span><br><span class="line">arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr1: <span class="built_in">Array</span>&lt;<span class="built_in">number</span>&gt;;</span><br><span class="line">arr1 = [<span class="number">1</span>, <span class="string">'2'</span>, <span class="number">3</span>];</span><br><span class="line">arr1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> fe: <span class="built_in">string</span>[];</span><br><span class="line">fe = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]; <span class="comment">// TS</span></span><br><span class="line">fe = [<span class="string">'Vue'</span>, <span class="string">'React'</span>, <span class="string">'Angular'</span>];</span><br></pre></td></tr></table></figure><h3 id="不确定什么属性"><a href="#不确定什么属性" class="headerlink" title="不确定什么属性"></a>不确定什么属性</h3><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// any</span><br><span class="line">let type_con: any;</span><br><span class="line">type_con = [];</span><br><span class="line">type_con = &#123;&#125;;</span><br><span class="line">type_con = 1;</span><br><span class="line">type_con = '2';</span><br><span class="line">type_con = true;</span><br><span class="line">type_con.func();</span><br></pre></td></tr></table></figure><h3 id="Void"><a href="#Void" class="headerlink" title="Void"></a>Void</h3><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//void</span></span><br><span class="line"><span class="keyword">let</span> test<span class="number">_</span><span class="keyword">void</span>: <span class="keyword">void</span> = null;</span><br><span class="line">test<span class="number">_</span><span class="keyword">void</span> = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h3 id="Function定义"><a href="#Function定义" class="headerlink" title="Function定义"></a>Function定义</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">vo</span><span class="params">()</span></span>: void &#123;</span><br><span class="line">    console.<span class="built_in">log</span>(<span class="string">'这是一个返回值为void的函数'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">vo1</span><span class="params">()</span></span>: void &#123;</span><br><span class="line">    console.<span class="built_in">log</span>(<span class="string">'这是一个返回值为void的函数'</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">str</span><span class="params">()</span></span>: <span class="built_in">string</span> &#123;</span><br><span class="line">    console.<span class="built_in">log</span>(<span class="string">'这是一个返回值为string的函数'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">str1</span><span class="params">()</span></span>: <span class="built_in">string</span> &#123;</span><br><span class="line">    console.<span class="built_in">log</span>(<span class="string">'这是一个返回值为string的函数'</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'string'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://pic3.zhimg.com/v2-a5297254fb03d6efd0e464c9db728318_r.jpg" alt="TS 编辑函数报错1"><br><img src="https://pic3.zhimg.com/80/v2-ee325ecdd977582036d0e0f026ec2576_hd.jpg" alt="TS 编辑函数报错2"><br>当我们在使用函数的时候，有些时候会使用到函数参数默认，或者可选参数，那么在TS中如何写呢？<br><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">game</span>(<span class="params">name: <span class="built_in">string</span>, rank?: <span class="built_in">string</span>, score: <span class="built_in">number</span> = 0</span>): <span class="title">string</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;name&#125;</span> <span class="subst">$&#123;rank&#125;</span> <span class="subst">$&#123;score&#125;</span>`</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(game(<span class="string">'rainy'</span>, <span class="string">'difficult'</span>, <span class="number">10000</span>));</span><br><span class="line"><span class="built_in">console</span>.log(game(<span class="string">'rainy'</span>, <span class="string">'difficult'</span>));</span><br><span class="line"><span class="built_in">console</span>.log(game(<span class="string">'rainy'</span>));</span><br></pre></td></tr></table></figure></p><p><img src="https://pic4.zhimg.com/80/v2-4d011be796dcd4e76073f3bb8072aa3f_hd.jpg" alt="默认参数、可选参数"></p><h3 id="Class类"><a href="#Class类" class="headerlink" title="Class类"></a>Class类</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> Person &#123;</span><br><span class="line">    name: <span class="built_in">string</span>;</span><br><span class="line">    <span class="keyword">constructor</span>(<span class="params">name: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    greet() &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`Hello, <span class="subst">$&#123;this.name&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> Student <span class="keyword">extends</span> Person &#123;</span><br><span class="line">    name: <span class="built_in">string</span>;</span><br><span class="line">    age: <span class="built_in">number</span>;</span><br><span class="line">    <span class="keyword">constructor</span>(<span class="params">name: <span class="built_in">string</span>, age: <span class="built_in">number</span></span>) &#123;</span><br><span class="line">        <span class="keyword">super</span>(name);</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    greet() &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`Hello, My name is <span class="subst">$&#123;this.name&#125;</span> and I'm <span class="subst">$&#123;this.age&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    study() &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;this.name&#125;</span>, you should go to study.`</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> Person(<span class="string">'Rain120'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'p:'</span>, p.name)</span><br><span class="line">p.greet()</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> stu = <span class="keyword">new</span> Student(<span class="string">'Rain'</span>, <span class="number">21</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'stu:'</span>, stu.name, stu.age);</span><br><span class="line">stu.greet();</span><br><span class="line">stu.study();</span><br></pre></td></tr></table></figure><p>我们在学习面向对象的语言，C++和Java时候知道类的属性和方法是有修饰符的，他们决定了外部是否能够访问类中的属性、方法，当用户为定义是，属性和方法默认都是public 属性，其中还有protected 和private 属性。当你使用private 修饰符定义成属性或者方法时，如果你需要让其他使用者使用这个属性时，你可以定义一个public 的方法，之后用户只能通过这个API接口来获取属性值或者方法的结果，例如：<br><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> Person &#123;</span><br><span class="line">    <span class="keyword">private</span> name: <span class="built_in">string</span>;</span><br><span class="line">    <span class="keyword">constructor</span>(<span class="params">name: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    getName() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> Person(<span class="string">'Rain120'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'person name:'</span>, p.name)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'person name:'</span>, p.getName())</span><br></pre></td></tr></table></figure></p><p><img src="https://pic1.zhimg.com/80/v2-76a6cf5bc4eddf504cbc40f295dd83ad_hd.jpg" alt="private修饰符"></p><p>虽然这里报错了，但是编译结果却是可以的应为TS在转换成JS语言后，并没有真的将name编译成私有的属性，TypeScript的核心原则之一是对值所具有的结构进行类型检查，它的作用只是提示开发者。</p><p>protected 修饰符与private 修饰符的行为很相似，但有一点不同，protected 成员在派生类中仍然可以访问, 这就不详细讲解这些了，大家可以去学习下Java或者C++的类，感受一下。</p><h3 id="接口（Interface）"><a href="#接口（Interface）" class="headerlink" title="接口（Interface）"></a>接口（Interface）</h3><p>在TypeScript里，接口的作用就是为这些类型命名和为你的代码或第三方代码定义契约。这句话太官方了，我自己理解的就是它定义了一些你自己约定的参数类型。</p><p>工作中，我们使用到的是React+Typescript，所以，我把我日常写法拿出来。<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">interface <span class="type">SystemsProps</span> &#123;</span><br><span class="line">    systems: any</span><br><span class="line">&#125;</span><br><span class="line">export <span class="class"><span class="keyword">class</span> <span class="title">Systems</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component&lt;SystemsProps</span>, <span class="title">any&gt;</span></span></span><br><span class="line"><span class="class">    ...</span></span><br><span class="line"><span class="class">    <span class="title">render</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">       const &#123; systems &#125; = <span class="keyword">this</span>.props</span><br><span class="line">       <span class="keyword">return</span> (</span><br><span class="line">          &lt;div&gt;&#123;systems.name&#125;&lt;/div&gt;</span><br><span class="line">       )</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>当然，从C++中学到接口也是可以继承的，例如：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">interface Color&#123;</span><br><span class="line">    color: string;</span><br><span class="line">&#125;</span><br><span class="line">interface Car extends Color&#123;</span><br><span class="line">    price: number;</span><br><span class="line">&#125;</span><br><span class="line">let car = &lt;Car&gt;&#123;&#125;;</span><br><span class="line">car.color = <span class="string">"white"</span>;</span><br><span class="line">car.price = 10000000;</span><br></pre></td></tr></table></figure></p><h3 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h3><p>在像C++和Java这样的语言中，可以使用泛型来创建可重用的组件，一个组件可以支持多种类型的数据。 这样用户就可以以自己的数据类型来使用组件。</p><p>其实我们之前有用到泛型，只是没有说到这个概念。<br><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr: <span class="built_in">Array</span>&lt;<span class="built_in">number</span>&gt; = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br></pre></td></tr></table></figure></p><p>这是一个最简答你的泛型，定义了一个number类型的数组，下面我写一个复杂点的泛型：<br><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> Fruit &#123;</span><br><span class="line">    name: <span class="built_in">string</span>;</span><br><span class="line">    price: <span class="built_in">number</span>;</span><br><span class="line">    <span class="keyword">constructor</span>(<span class="params">name: <span class="built_in">string</span>, price: <span class="built_in">number</span></span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.price = price;</span><br><span class="line">    &#125;</span><br><span class="line">    sold() &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;this.name&#125;</span> sold $<span class="subst">$&#123;this.price&#125;</span>`</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> fruit: <span class="built_in">Array</span>&lt;Fruit&gt; = []</span><br><span class="line">fruit[<span class="number">0</span>] = <span class="keyword">new</span> Fruit(<span class="string">'apple'</span>, <span class="number">8</span>)</span><br><span class="line">fruit[<span class="number">1</span>] = <span class="keyword">new</span> Fruit(<span class="string">'banana'</span>, <span class="number">5</span>)</span><br><span class="line">fruit[<span class="number">2</span>] = <span class="keyword">new</span> Fruit(<span class="string">'lemon'</span>, <span class="number">10</span>)</span><br><span class="line"><span class="built_in">console</span>.log(fruit)</span><br></pre></td></tr></table></figure></p><p><img src="https://pic1.zhimg.com/80/v2-a6326c500dd0da724a7487b31f37b904_hd.jpg" alt="泛型类"></p><p>这个泛型是一个Fruit类型的数组，这个数组的子元素全是Fruit类型，当我们定义一个其他类型是，例如<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fruit[<span class="number">3</span>] = &#123; <span class="string">name:</span> <span class="string">'watermelon'</span>, <span class="string">price:</span> <span class="number">2</span> &#125;</span><br></pre></td></tr></table></figure></p><p><img src="https://pic2.zhimg.com/80/v2-8ab3524ba2956a75bd551aa0d3fbc6ff_hd.jpg" alt="泛型类报错"></p><h3 id="类型推断机制"><a href="#类型推断机制" class="headerlink" title="类型推断机制"></a>类型推断机制</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">let num</span> = 10;</span><br><span class="line"><span class="attribute">num</span> = <span class="string">'str'</span>;</span><br></pre></td></tr></table></figure><p>我们平常在使用变量赋值的时候，这样写是没有问题，但是使用TS类型检查后，它会根据用户第一次定义或者赋值的类型来推断该变量的类型，这就是TS的类型推断机制。<br><img src="https://pic2.zhimg.com/80/v2-19d3658b16a3b4cb03b5a8ff64cc4a99_hd.jpg" alt="TS的类型推断机制报错"></p><h3 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h3><p>这里我们讲下我们常见的几种的迭代器，包括for-in, for-of，用来跟forEach对比，直接上代码，我们从代码来分析它们之间的不同<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr: any = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>];</span><br><span class="line">arr.type = <span class="string">'array'</span></span><br><span class="line"></span><br><span class="line">arr.forEach(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="string">'forEach'</span>, index, item, arr[index]);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">in</span> arr) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'for-in'</span>, i, arr[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">    <span class="string">'a'</span>: <span class="string">'I\'m a'</span>,</span><br><span class="line">    <span class="string">'b'</span>: <span class="string">'I\'m b'</span>,</span><br><span class="line">    <span class="string">'c'</span>: <span class="string">'I\'m c'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> arr) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'for-of'</span>, i, obj[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="https://pic4.zhimg.com/80/v2-ab6ae4704aeb3983049634c4ec8e167f_hd.jpg" alt="迭代器结果"></p><p>从结果上来看，</p><p>forEach：只是常见的for循环，它不会遍历该对象的属性值；<br>for-in：迭代的是对象的键（key）的列表，它会遍历对象的属性；<br>for-of：迭代对象的键对应的值（value），它也不会遍历对象的属性。</p><h3 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h3><p>这个地方熟悉CommonJS的都会知道export（导出）， import（导入），所以这里就不详细讲了，直接跳过</p><p>最后讲一下，tsconfig.json的配置，详见<a href="https://github.com/hstarorg/HstarDoc/blob/master/%E5%89%8D%E7%AB%AF%E7%9B%B8%E5%85%B3/TypeScript%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6tsconfig%E7%AE%80%E6%9E%90.md" target="_blank" rel="noopener">tsconfig.json</a><br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"compilerOptions"</span>: &#123;</span><br><span class="line">    <span class="string">"moduleResolution"</span>: <span class="string">"node"</span>,</span><br><span class="line">    <span class="string">"outDir"</span>: .<span class="regexp">/dist", /</span>/ 生成的所有文件放在dist目录下</span><br><span class="line">    <span class="string">"target"</span>: <span class="string">"es5"</span>, <span class="comment">// 将JavaScript代码降级到低版本ECMAScript 5</span></span><br><span class="line">    <span class="string">"lib"</span>: [<span class="string">"es6"</span>, <span class="string">"dom"</span>],</span><br><span class="line">    <span class="string">"rootDir"</span>: <span class="string">"app/"</span>, <span class="comment">//仅用来控制输出的目录结构。</span></span><br><span class="line">    <span class="string">"jsx"</span>: <span class="string">"react"</span>, <span class="comment">// 用于指定按照何种方式生成jsx代码，可选react和preserve。</span></span><br><span class="line">    <span class="string">"module"</span>: <span class="string">"esnext"</span>, <span class="comment">// 用于指定模块的代码生成规则，可以使用 commonjs 、 amd 、 umd 、 system 、 es6 、 es2015 、 none 这些选项。</span></span><br><span class="line">    <span class="string">"declaration"</span>: <span class="literal">false</span>, <span class="comment">// 是否需要生成定义文件d.ts，设置为true，则生成</span></span><br><span class="line">    <span class="string">"allowJs"</span>: <span class="literal">true</span>,  <span class="comment">// 接受JavaScript做为输入</span></span><br><span class="line">    <span class="string">"allowSyntheticDefaultImports"</span>: <span class="literal">true</span>, <span class="comment">// 置为true时，则允许从没有默认导出的模块中默认导入(也就是不做检查)。</span></span><br><span class="line">    <span class="string">"inlineSourceMap"</span>: <span class="literal">false</span>, <span class="comment">// 是否需要将sourceMap文件生成到js文件中，设置为true，则生成到js文件中。</span></span><br><span class="line">    <span class="string">"sourceMap"</span>: <span class="literal">true</span>, <span class="comment">// 把 ts 文件编译成 js 文件的时候，同时生成对应的 map 文件</span></span><br><span class="line">    <span class="string">"noEmitOnError"</span>: <span class="literal">false</span>, <span class="comment">// 设置为true时，如果遇到了错误，就不再输出</span></span><br><span class="line">    <span class="string">"emitDecoratorMetadata"</span>: <span class="literal">false</span>, <span class="comment">// 设置为true，则使用元数据特性</span></span><br><span class="line">    <span class="string">"experimentalDecorators"</span>: <span class="literal">true</span>, <span class="comment">// 设置为true，则支持ES7的装饰器特性</span></span><br><span class="line">    <span class="string">"noImplicitReturns"</span>: <span class="literal">true</span>, <span class="comment">// 会防止你忘记在函数末尾返回值</span></span><br><span class="line">    <span class="string">"noImplicitThis"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">"noImplicitUseStrict"</span>: <span class="literal">false</span>, <span class="comment">// 当设置为true时，编译输出时不会调用'use strict'指令（也就是不生成use strict）</span></span><br><span class="line">    <span class="string">"noImplicitAny"</span>: <span class="literal">false</span>, <span class="comment">// 如果编译器无法根据变量的用途推断出变量的类型，它就会悄悄的把变量类型默认为 any。</span></span><br><span class="line">    <span class="string">"noUnusedLocals"</span>: <span class="literal">false</span>, </span><br><span class="line">    <span class="string">"baseUrl"</span>: <span class="string">"app"</span>,</span><br><span class="line">    <span class="string">"paths"</span>: &#123;</span><br><span class="line">      <span class="string">"app"</span>: [<span class="string">"app"</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 包括app下的所有.ts（对应js文件）, .tsx（对应jsx文件）文件</span></span><br><span class="line">  <span class="string">"include"</span>: [</span><br><span class="line">    <span class="string">"app/**/*.ts"</span>,</span><br><span class="line">    <span class="string">"app/**/*.tsx"</span></span><br><span class="line">  ],</span><br><span class="line">   <span class="comment">// 忽略node_modules下所有的文件</span></span><br><span class="line">  <span class="string">"exclude"</span>: [</span><br><span class="line">        <span class="string">"node_modules"</span>,</span><br><span class="line">        ... <span class="comment">//其他要忽略的文件或者正则表达式表示</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- 
[知乎](https://www.zhihu.com/people/yan-yang-nian-hua-120/activities)

[个人博客](https://rain120.github.io/)

[Github](https://github.com/R
      
    
    </summary>
    
      <category term="Typescript" scheme="https://rain120.github.io/categories/Typescript/"/>
    
    
      <category term="Typescript" scheme="https://rain120.github.io/tags/Typescript/"/>
    
  </entry>
  
  <entry>
    <title>office 2016专业版激活教程</title>
    <link href="https://rain120.github.io/2018/07/21/Crack-Office/"/>
    <id>https://rain120.github.io/2018/07/21/Crack-Office/</id>
    <published>2018-07-21T09:15:47.000Z</published>
    <updated>2018-07-21T14:07:28.012Z</updated>
    
    <content type="html"><![CDATA[<!-- [知乎](https://www.zhihu.com/people/yan-yang-nian-hua-120/activities)[个人博客](https://rain120.github.io/)[Github](https://github.com/Rain120) --><p>传送门：<a href="https://github.com/Rain120/Free-Source/tree/master/office%20%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B" target="_blank" rel="noopener">office 2016专业版激活教程</a></p><h1 id="office-2016专业版激活教程"><a href="#office-2016专业版激活教程" class="headerlink" title="office 2016专业版激活教程"></a>office 2016专业版激活教程</h1><ul><li>进入office激活教程中选择自己的版本进入相应的文件夹，下载相应的bat.txt</li><li>将bat.txt改为bat.cmd，默认是没有显示文件扩展名的，打开方式如下<br><img src="https://camo.githubusercontent.com/793c31d81d64f2ed946053fb9bd71aac153550af/68747470733a2f2f706963332e7a68696d672e636f6d2f38302f76322d31333262336135376131626530656565323033373735353239653666336330325f68642e6a7067" alt="打开文件扩展名"></li><li>管理员身份运行<br><img src="https://pic2.zhimg.com/80/v2-a8edacb5e790ccae2819e58286f5763f_hd.jpg" alt="管理员身份运行"></li><li>运行ing<br><img src="https://camo.githubusercontent.com/d3e4ac83c39b927564130d744920215214e49a20/68747470733a2f2f706963342e7a68696d672e636f6d2f38302f76322d36653961353662626130336266633161343765646232373762306630373632355f68642e6a7067" alt="运行ing"></li><li>运行完成<br><img src="https://camo.githubusercontent.com/25de5d5a4f35f0cdb01c0c2277ff1209ab6551d5/68747470733a2f2f706963332e7a68696d672e636f6d2f38302f76322d63663437343531316534333433353835613834373162313063393337663231645f68642e6a7067" alt="运行完成"></li><li>激活完成<br><img src="https://pic4.zhimg.com/v2-70c560c90d07ddb99e267e5c844c6a2d_1200x500.jpg" alt="激活完成"></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- 
[知乎](https://www.zhihu.com/people/yan-yang-nian-hua-120/activities)

[个人博客](https://rain120.github.io/)

[Github](https://github.com/R
      
    
    </summary>
    
      <category term="Office2016 激活office" scheme="https://rain120.github.io/categories/Office2016-%E6%BF%80%E6%B4%BBoffice/"/>
    
    
      <category term="Office 2016" scheme="https://rain120.github.io/tags/Office-2016/"/>
    
      <category term="激活office" scheme="https://rain120.github.io/tags/%E6%BF%80%E6%B4%BBoffice/"/>
    
  </entry>
  
  <entry>
    <title>Chrome DevTools调试（前后端小白必备招式）-- 第一招（设备模式+元素面板）</title>
    <link href="https://rain120.github.io/2018/07/04/Chrome-Debug-01/"/>
    <id>https://rain120.github.io/2018/07/04/Chrome-Debug-01/</id>
    <published>2018-07-04T13:48:49.000Z</published>
    <updated>2018-07-04T14:23:23.783Z</updated>
    
    <content type="html"><![CDATA[<!-- [知乎](https://www.zhihu.com/people/yan-yang-nian-hua-120/activities)[个人博客](https://rain120.github.io/)[Github](https://github.com/Rain120) --><p>转眼就毕业了，大家都各奔前程，同学有走读研，有走后端，有走测试，前端就我一个人了，所以肩负起那些走南闯北的同学的希望，解决他们遇到的前端Bug问题，然后发现好多同学都不会借助浏览器调试找出问题的所在，超级心累</p><p><img src="https://pic4.zhimg.com/80/v2-208b23639a7462b1fbf9c76b6ef7f060_hd.jpg" alt="心累"></p><p>因此留下这篇日志，为了方便我前端小白的那些同学更快解决问题。</p><p>此文只介绍Google的Chrome DevTools，其他浏览器大同小异，请自己探索。</p><p><a href="https://developers.google.com/web/tools/chrome-devtools/?hl=zh-cn" target="_blank" rel="noopener">官方链接</a></p><p>Chrome 开发者工具是一套内置于Google Chrome中的Web开发和调试工具，可用来对网站进行迭代、调试和分析。</p><p>打开Chrome 开发者工具</p><ul><li>在页面元素上右键点击，选择 “检查”</li><li>使用 快捷键 Ctrl+Shift+I (Windows) 或 Cmd+Opt+I (Mac)</li></ul><p><img src="https://pic1.zhimg.com/80/v2-bfc20a7694def9867ad0a05fc892b92e_hd.jpg" alt="Open"></p><p>我就拿我的知乎主页来介绍吧，开发者工具打开之后</p><p><img src="https://pic1.zhimg.com/80/v2-96f9fd025d033c0481f994c9727e281f_hd.jpg" alt="打开开发者工具后"></p><p>我们先了解一下开发者工具的面板介绍：</p><ol><li>设备模式</li></ol><p>当你的项目是移动适配时，你可以根据这个选项设置你的设备类型，包括IPhone6/7/X等设备</p><p><img src="https://pic3.zhimg.com/80/v2-d88b71bac3ca5b12a0dd8a1128e02c25_hd.jpg" alt="设备模式jpg"></p><p><img src="https://pic3.zhimg.com/v2-ad683c2c35fdc206554cdc3d16980fe1_b.gif" alt="设备模式Gif"></p><ol start="2"><li>元素面板</li></ol><p>你可以选择开发者工具中的左上角的那个Button，或者Windows下使用快捷键Shift+Ctrl+C</p><p><img src="https://pic3.zhimg.com/v2-37b846101767ffae22e8d97ad1d14e87_b.gif" alt="元素面板"></p><p>检查应用到元素的样式</p><p><img src="https://pic3.zhimg.com/80/v2-9277cde26cc1cf44415ee83cb6de745d_hd.jpg" alt="Style面板"></p><ol><li>与元素匹配的选择器的关联样式。</li><li>User Agent 样式表清晰标记，并且在网页上经常被 CSS 替换。</li><li>已被级联规则替换的规则将显示为带删除线的文本。</li><li>继承的样式将在“Inherited from <node>”标头下显示为一组。点击标头中的 DOM 节点可以导航到其在 DOM 树视图中的位置。 （CSS 2.1 属性表显示了哪些属性是可以继承的。）</node></li><li>灰色的条目不是已定义的规则，而是在运行时计算的规则。</li></ol><p>如图示，当你在点击该Button时，鼠标在页面上选择任意元素，Element中会自动对齐到相应的位置，那么我们接着讲元素的其他操作<br><img src="https://pic3.zhimg.com/v2-0d582bda34eabdb5b44101b5205b1916_b.gif" alt="元素操作1"></p><p>比如，我们想知道页面上这个提问按钮的颜色是什么，我想改变，但是不知道什么颜色好看呀，我可以在页面上边看效果，边确认自己的想法<br><img src="https://pic4.zhimg.com/v2-846cbd18e7faa856ed9892ad08e903dc_b.gif" alt="元素操作2"></p><p><img src="https://pic4.zhimg.com/80/v2-b652392bc3972e67bfec5af9289d0d13_hd.jpg" alt="颜色面板"></p><ol><li>取色器。请参阅取色器了解更多信息。</li><li>当前颜色。当前值的可视表示。</li><li>当前值。当前颜色的十六进制、RGBA 或 HSL 表示。</li><li>调色板。请参阅调色板了解更多信息。</li><li>着色和阴影选择器。</li><li>色调选择器。</li><li>不透明度选择器。</li><li>颜色值选择器。点击可以在 RGBA、HSL 和十六进制之间切换。</li><li>调色板选择器。点击可以选择不同的模板。</li></ol><p>接下来，我们讲讲如何查找类名及其样式，并在页面上修改</p><p>比如，我们要找页面上一个叫做UserAvatar的类名，然后在页面上查看他的样式，并进行一些样式的修改</p><p><img src="https://pic4.zhimg.com/v2-a340b919052b6fc3b1331573b556b7dd_b.gif" alt="查找类名UserAvatar"></p><p>你可以实时的修改HTML元素和CSS样式，当然这些浏览器也会有相应的提示。</p><p><img src="https://pic2.zhimg.com/80/v2-9d2d9264124c1eba986809a75c4ac97c_hd.jpg" alt="提示"></p><p>HTML元素右击可以修改相对应的属性值</p><p><img src="https://pic1.zhimg.com/80/v2-a9e59469ba2129c37a086fc059d63038_hd.jpg" alt="右键菜单jpg"><br><img src="https://pic1.zhimg.com/v2-3a9061a2045cceba7fc34745c96bc910_b.gif" alt="右键菜单gif"></p><p>接下来就是见名知意，大家可以自己尝试下其他的功能。</p><p>在你选择到你要查看的元素后，你可以在开发者工具中看到你选择HTML，包括类名，然后你可以看到该元素类的样式<br><img src="https://pic1.zhimg.com/80/v2-a808d747a8ffb338ea9e5cd4e96f9340_hd.jpg" alt="Style面板"></p><p>使用 Computed 窗格检查和编辑当前元素的框模型参数，该元素是在计算后的表现（包括margin，border，padding，这里需要理解一下盒子模型）， 框模型中的所有值均可修改，只需点击它们即可。<br><img src="https://pic4.zhimg.com/80/v2-d4a87a131f61f9ebd6205cb21c91bc6f_hd.jpg" alt="Computed面板"></p><p>在 Styles 窗格中，点击您修改的文件。DevTools 会将您带到 Sources 面板，很多时候你的代码都是被压缩的状态，你可以点击左下角的{}将其进行格式化<br><img src="https://pic2.zhimg.com/v2-a9badd25da1c0297f62cf0c553ea7452_b.gif" alt="Styles -&gt; Sources"></p><p>添加、启用和停用 CSS 类</p><p>我们接着来看这个提问这个Button，点击 .cls 按钮可以查看与当前选定元素关联的所有 CSS 类。 从这里，您可以执行以下操作：</p><ul><li>启用或停用当前与元素关联的类。</li><li>向元素添加新类。</li></ul><p><img src="https://pic1.zhimg.com/80/v2-4f8ecbec42c642d00e5d1aaeb833331a_hd.jpg" alt="添加、启用和停用 CSS 类jpg"><br><img src="https://pic4.zhimg.com/v2-8264ed62641757f34494990be791f687_b.gif" alt="添加、启用和停用 CSS 类gif"></p><p>添加或移除动态样式（伪类）</p><p>有的时候，我们需要查看一些伪类或者动态元素样式在触发之后的状态，例如a标签hover之后的状态,例如，我们将页面中<code>&lt;a class=&quot;AppHeader-navItem&quot; href=&quot;//www.zhihu.com/&quot;&gt;首页&lt;/a&gt;</code>在触发hover之后的颜色和字体更改为<code>color:red;font-size:20px;</code><br><img src="https://pic2.zhimg.com/80/v2-f364e3abba46cf5a44e9d1ad3aa003b9_hd.jpg" alt="添加或移除动态样式（伪类）前"><br><img src="https://pic1.zhimg.com/80/v2-23e512805b768f2d5aacfe7ce2184828_hd.jpg" alt="添加或移除动态样式（伪类）后"></p><p>从图示可知，我们在选择hover之后，之前灰色的样式变成正常转态，也就是这部分样式生效了，或者右击该元素选择进行下列操作也可以实现<br><img src="https://pic2.zhimg.com/80/v2-d9e877bfa1dcda9ee33d17cded30b169_hd.jpg" alt="添加或移除动态样式（伪类）"></p><p>Styles 窗格提供了一个用于向样式规则添加 color 和 background-color 声明的快捷方式。样式规则的右下角有一个由三个点组成的图标。您需要将鼠标悬停到样式规则上才能看到这个图标。这5个图标可以通过提示得知它们的作用<br><img src="https://pic1.zhimg.com/80/v2-2b261bb1d7542a8dbb6f072b590cc722_hd.jpg" alt="快速添加样式"></p><p>第一招，关于设备模式以及元素面板的招式，基本上已经学完了，大家可以尝试一下，我们第二招再见</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- 
[知乎](https://www.zhihu.com/people/yan-yang-nian-hua-120/activities)

[个人博客](https://rain120.github.io/)

[Github](https://github.com/R
      
    
    </summary>
    
      <category term="Chrome DevTools" scheme="https://rain120.github.io/categories/Chrome-DevTools/"/>
    
    
      <category term="前端调试技巧" scheme="https://rain120.github.io/tags/%E5%89%8D%E7%AB%AF%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Chrome DevTools" scheme="https://rain120.github.io/tags/Chrome-DevTools/"/>
    
  </entry>
  
  <entry>
    <title>Jquery + dataTable + Bootstrap + 完整逻辑实现表格的增删改查</title>
    <link href="https://rain120.github.io/2018/07/03/dataTable/"/>
    <id>https://rain120.github.io/2018/07/03/dataTable/</id>
    <published>2018-07-03T09:27:42.000Z</published>
    <updated>2018-07-05T07:36:06.138Z</updated>
    
    <content type="html"><![CDATA[<p>最近在做毕设，同学在做前端页面的时候使用到JQuery、DataTable和Bootstrap这些控件，然后自己又在刷题的时候遇到一个这个demo的实现，于是就自己去官网文档上学习了一下，尝试实现这个demo</p><p>官方文档：<a href="https://datatables.net/manual/installation" target="_blank" rel="noopener">DataTable</a></p><p>Demo代码：<a href="https://github.com/Rain120/Web-Study/blob/master/datatable.html" target="_blank" rel="noopener">Demo代码</a></p><p>效果如下图示：<br><img src="https://pic2.zhimg.com/v2-79001454d1036d0616c96b4dd11a1ef1_b.jpg" alt="效果图示"></p><p><img src="https://pic2.zhimg.com/v2-d58f162543f01fa2177cadfc05f2531f_b.jpg" alt="效果图示"></p><p><img src="https://pic2.zhimg.com/80/v2-794cc3a92a9c0803531c24b29d1db30e_hd.jpg" alt="效果图示"></p><p><img src="https://pic4.zhimg.com/80/v2-2986ace23e1f3d924bb5bb642e82ac8b_hd.jpg" alt="效果图示"></p><p>顶部button DOM结构：<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 页面上的三个button，增删改</span></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn-group operation"</span>&gt;</span><br><span class="line">  &lt;button id=<span class="string">"btn_add"</span> <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn bg-primary"</span>&gt;</span><br><span class="line">    &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"glyphicon glyphicon-plus"</span> aria-hidden=<span class="string">"true"</span>&gt;&lt;/span&gt;新增</span><br><span class="line">  &lt;/button&gt;</span><br><span class="line">  &lt;button id=<span class="string">"btn_edit"</span> <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn bg-info"</span>&gt;</span><br><span class="line">    &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"glyphicon glyphicon-pencil"</span> aria-hidden=<span class="string">"true"</span>&gt;&lt;/span&gt;修改</span><br><span class="line">  &lt;/button&gt;</span><br><span class="line">  &lt;button id=<span class="string">"btn_delete"</span> <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-success"</span>&gt;</span><br><span class="line">    &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"glyphicon glyphicon-remove"</span> aria-hidden=<span class="string">"true"</span>&gt;&lt;/span&gt;删除</span><br><span class="line">  &lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>这里的Modal框的实现是借助<a href="http://www.runoob.com/bootstrap/bootstrap-modal-plugin.html" target="_blank" rel="noopener">Bootstrap模态框</a>来实现的</p><p>添加图书 Modal框的实现：<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"modal fade"</span> id=<span class="string">"addBook"</span> role=<span class="string">"dialog"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"modal-dialog"</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"modal-content"</span>&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"modal-header"</span>&gt;</span><br><span class="line">        &lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"close"</span> data-dismiss=<span class="string">"modal"</span>&gt;&amp;times;&lt;/button&gt;</span><br><span class="line">        &lt;h4 <span class="class"><span class="keyword">class</span></span>=<span class="string">"modal-title"</span>&gt;添加图书&lt;/h4&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div id=<span class="string">"addBookModal"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"modal-body"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-horizontal"</span>&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label <span class="keyword">for</span>=<span class="string">"bookName"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-2 control-label"</span>&gt;书名:*&lt;/label&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-10"</span>&gt;</span><br><span class="line">              &lt;input <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"bookName"</span> <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span>&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label <span class="keyword">for</span>=<span class="string">"bookAuthor"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-2 control-label"</span>&gt;作者:*&lt;/label&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-10"</span>&gt;</span><br><span class="line">              &lt;input <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"bookAuthor"</span> <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span>&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label <span class="keyword">for</span>=<span class="string">"bookPrice"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-2 control-label"</span>&gt;价格:*&lt;/label&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-10"</span>&gt;</span><br><span class="line">              &lt;input <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"bookPrice"</span> <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span>&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label <span class="keyword">for</span>=<span class="string">"bookPublish"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-2 control-label"</span>&gt;出版社:*&lt;/label&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-10"</span>&gt;</span><br><span class="line">              &lt;input <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"bookPublish"</span> <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span>&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label <span class="keyword">for</span>=<span class="string">"bookISBN"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-2 control-label"</span>&gt;<span class="type">ISBN</span>:*&lt;/label&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-10"</span>&gt;</span><br><span class="line">              &lt;input <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"bookISBN"</span> <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span>&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"modal-footer"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"center-block"</span>&gt;</span><br><span class="line">          &lt;button id=<span class="string">"cancelAdd"</span> <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-default"</span> data-dismiss=<span class="string">"modal"</span>&gt;取消&lt;/button&gt;</span><br><span class="line">          &lt;button id=<span class="string">"addBooksInfo"</span> <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-success"</span> data-dismiss=<span class="string">"modal"</span>&gt;保存&lt;/button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>修改图书内容Modal框的实现：<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"modal fade"</span> id=<span class="string">"editBookInfo"</span> role=<span class="string">"dialog"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"modal-dialog"</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"modal-content"</span>&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"modal-header"</span>&gt;</span><br><span class="line">        &lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"close"</span> data-dismiss=<span class="string">"modal"</span>&gt;&amp;times;&lt;/button&gt;</span><br><span class="line">        &lt;h4 <span class="class"><span class="keyword">class</span></span>=<span class="string">"modal-title"</span>&gt;修改图书内容&lt;/h4&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div id=<span class="string">"editBookModal"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"modal-body"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-horizontal"</span>&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label <span class="keyword">for</span>=<span class="string">"editBookName"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-2 control-label"</span>&gt;书名:*&lt;/label&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-10"</span>&gt;</span><br><span class="line">              &lt;input <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"editBookName"</span> <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span>&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label <span class="keyword">for</span>=<span class="string">"editBookAuthor"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-2 control-label"</span>&gt;作者:*&lt;/label&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-10"</span>&gt;</span><br><span class="line">              &lt;input <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"editBookAuthor"</span> <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span>&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label <span class="keyword">for</span>=<span class="string">"editBookPrice"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-2 control-label"</span>&gt;价格:*&lt;/label&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-10"</span>&gt;</span><br><span class="line">              &lt;input <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"editBookPrice"</span> <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span>&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label <span class="keyword">for</span>=<span class="string">"editBookPublish"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-2 control-label"</span>&gt;出版社:*&lt;/label&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-10"</span>&gt;</span><br><span class="line">              &lt;input <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"editBookPublish"</span> <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span>&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label <span class="keyword">for</span>=<span class="string">"editBookISBN"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-2 control-label"</span>&gt;<span class="type">ISBN</span>:*&lt;/label&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-10"</span>&gt;</span><br><span class="line">              &lt;input <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"editBookISBN"</span> <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span>&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"modal-footer"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"center-block"</span>&gt;</span><br><span class="line">          &lt;button id=<span class="string">"cancelEdit"</span> <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-default"</span> data-dismiss=<span class="string">"modal"</span>&gt;取消&lt;/button&gt;</span><br><span class="line">          &lt;button id=<span class="string">"saveEdit"</span> <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-success"</span> data-dismiss=<span class="string">"modal"</span>&gt;保存&lt;/button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>删除Modal框的实现：<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"modal fade"</span> id=<span class="string">"deleteBook"</span> role=<span class="string">"dialog"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"modal-dialog"</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"modal-content"</span>&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"modal-header"</span>&gt;</span><br><span class="line">        &lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"close"</span> data-dismiss=<span class="string">"modal"</span>&gt;&amp;times;&lt;/button&gt;</span><br><span class="line">        &lt;h4 <span class="class"><span class="keyword">class</span></span>=<span class="string">"modal-title"</span>&gt;确认要删除吗？&lt;/h4&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"modal-footer"</span>&gt;</span><br><span class="line">        &lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-default"</span> data-dismiss=<span class="string">"modal"</span>&gt;取消&lt;/button&gt;</span><br><span class="line">        &lt;button id=<span class="string">"delete"</span> <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-danger"</span> data-dismiss=<span class="string">"modal"</span>&gt;删除&lt;/button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>表格的实现：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;table id=<span class="string">"books"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"table table-striped table-bordered row-border hover order-column"</span> cellspacing=<span class="string">"0"</span> width=<span class="string">"100%"</span>&gt;</span><br><span class="line">  &lt;thead&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">      &lt;th&gt;序号&lt;<span class="regexp">/th&gt;</span></span><br><span class="line"><span class="regexp">      &lt;th&gt;书名&lt;/</span>th&gt;</span><br><span class="line">      &lt;th&gt;作者&lt;<span class="regexp">/th&gt;</span></span><br><span class="line"><span class="regexp">      &lt;th&gt;价格&lt;/</span>th&gt;</span><br><span class="line">      &lt;th&gt;出版社&lt;<span class="regexp">/th&gt;</span></span><br><span class="line"><span class="regexp">      &lt;th&gt;ISBN&lt;/</span>th&gt;</span><br><span class="line">    &lt;<span class="regexp">/tr&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>thead&gt;</span><br><span class="line">  &lt;tbody&gt;<span class="xml"><span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/table&gt;</span></span><br></pre></td></tr></table></figure></p><p>使用到一些简单的自定义样式：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-class">.content</span> &#123;</span></span><br><span class="line"><span class="undefined">    margin: 50px auto;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ccc</span>;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-class">.operation</span> &#123;</span></span><br><span class="line"><span class="undefined">    margin: 10px;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-class">.operation</span> &gt; <span class="selector-tag">button</span> &#123;</span></span><br><span class="line"><span class="undefined">    margin: 10px;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-id">#books_length</span> &#123;</span></span><br><span class="line"><span class="undefined">    float: left;</span></span><br><span class="line"><span class="undefined">    margin-left: 20px;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-id">#books_filter</span> &#123;</span></span><br><span class="line"><span class="undefined">    float: right;</span></span><br><span class="line"><span class="undefined">    margin-right: 20px;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-id">#books</span> &#123;</span></span><br><span class="line"><span class="undefined">    margin: 5px;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-class">.center-block</span> &#123;</span></span><br><span class="line"><span class="undefined">    display: block;</span></span><br><span class="line"><span class="undefined">    width: 21%;</span></span><br><span class="line"><span class="undefined">    margin: auto;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>其中，dataTable有三种数据获取方式，数组，JSON和Ajax请求数据<br>例如数组数据：<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="keyword">data</span> = [[<span class="string">''</span>, <span class="string">'三体'</span>, <span class="string">'刘慈欣'</span>, <span class="string">'39.00'</span>, <span class="string">'重庆出版社'</span>, <span class="string">'982513213516'</span>]]</span><br></pre></td></tr></table></figure></p><p>其实官网很多小例子，大家可以参考学习<br><a href="http://datatables.club/example/#api" target="_blank" rel="noopener">dataTables中文网</a></p><p>以上都是页面的DOM结构的实现，接下来，我们讲讲JS代码实现逻辑<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">  <span class="keyword">var</span> data = [[<span class="string">''</span>, <span class="string">'三体'</span>, <span class="string">'刘慈欣'</span>, <span class="string">'39.00'</span>, <span class="string">'重庆出版社'</span>, <span class="string">'982513213516'</span>]]</span></span><br><span class="line"><span class="actionscript">  <span class="keyword">var</span> titles = [<span class="string">'书名'</span>, <span class="string">'作者'</span>, <span class="string">'价格'</span>, <span class="string">'出版社'</span>, <span class="string">'ISBN'</span>]</span></span><br><span class="line"><span class="javascript">  $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> table = $(<span class="string">'#books'</span>).DataTable(&#123;</span></span><br><span class="line"><span class="undefined">      data: data,</span></span><br><span class="line"><span class="actionscript">      <span class="string">"pagingType"</span>: <span class="string">"full_numbers"</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="string">"bSort"</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 国际化</span></span></span><br><span class="line"><span class="actionscript">      <span class="string">"language"</span>: &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="string">"sProcessing"</span>: <span class="string">"处理中..."</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"sLengthMenu"</span>: <span class="string">"显示 _MENU_ 项结果"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"sZeroRecords"</span>: <span class="string">"没有匹配结果"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"sInfo"</span>: <span class="string">"显示第 _START_ 至 _END_ 项结果，共 _TOTAL_ 项"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"sInfoEmpty"</span>: <span class="string">"显示第 0 至 0 项结果，共 0 项"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"sInfoFiltered"</span>: <span class="string">"(由 _MAX_ 项结果过滤)"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"sInfoPostFix"</span>: <span class="string">""</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"sSearch"</span>: <span class="string">"搜索:"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"sUrl"</span>: <span class="string">""</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"sEmptyTable"</span>: <span class="string">"表中数据为空"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"sLoadingRecords"</span>: <span class="string">"载入中..."</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"sInfoThousands"</span>: <span class="string">","</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"oPaginate"</span>: &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="string">"sFirst"</span>: <span class="string">"首页"</span>,</span></span><br><span class="line"><span class="actionscript">            <span class="string">"sPrevious"</span>: <span class="string">"上页"</span>,</span></span><br><span class="line"><span class="actionscript">            <span class="string">"sNext"</span>: <span class="string">"下页"</span>,</span></span><br><span class="line"><span class="actionscript">            <span class="string">"sLast"</span>: <span class="string">"末页"</span></span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 排序方式</span></span></span><br><span class="line"><span class="actionscript">        <span class="string">"oAria"</span>: &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="string">"sSortAscending"</span>: <span class="string">": 以升序排列此列"</span>,</span></span><br><span class="line"><span class="actionscript">            <span class="string">"sSortDescending"</span>: <span class="string">": 以降序排列此列"</span></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">      &#125;,</span></span><br><span class="line"><span class="actionscript">      <span class="string">"columnDefs"</span>: [&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="string">"searchable"</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"orderable"</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"targets"</span>: <span class="number">0</span></span></span><br><span class="line"><span class="undefined">      &#125;],</span></span><br><span class="line"><span class="actionscript">      <span class="string">"order"</span>: [[<span class="number">1</span>, <span class="string">'asc'</span>]]</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="actionscript">    table.on(<span class="string">'order.dt search.dt'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="undefined">      table.column(0, &#123;</span></span><br><span class="line"><span class="actionscript">        search: <span class="string">'applied'</span>,</span></span><br><span class="line"><span class="actionscript">        order: <span class="string">'applied'</span></span></span><br><span class="line"><span class="actionscript">      &#125;).nodes().each(<span class="function"><span class="keyword">function</span><span class="params">(cell, i)</span> </span>&#123;</span></span><br><span class="line"><span class="undefined">        cell.innerHTML = i + 1;</span></span><br><span class="line"><span class="undefined">      &#125;);</span></span><br><span class="line"><span class="undefined">    &#125;).draw();</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#books tbody'</span>).on(<span class="string">'click'</span>, <span class="string">'tr'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span> ( $(<span class="keyword">this</span>).hasClass(<span class="string">'selected'</span>) ) &#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="keyword">this</span>).removeClass(<span class="string">'selected'</span>);</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">        table.$(<span class="string">'tr.selected'</span>).removeClass(<span class="string">'selected'</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="keyword">this</span>).addClass(<span class="string">'selected'</span>);</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 取消添加</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#cancelAdd"</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">'cancelAdd'</span>);</span></span><br><span class="line"><span class="javascript">      $(<span class="string">"#addBookModal"</span>).find(<span class="string">'input'</span>).val(<span class="string">''</span>)</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 添加图书信息</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#addBooksInfo"</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">'addBooksInfo'</span>); </span></span><br><span class="line"><span class="actionscript">      <span class="keyword">if</span> (data.length) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> ($(<span class="string">"#addBookModal"</span>).find(<span class="string">'input'</span>).val() !== <span class="string">''</span>) &#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> bookName = $(<span class="string">"#bookName"</span>).val()</span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> bookAuthor = $(<span class="string">"#bookAuthor"</span>).val()</span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> bookPrice = $(<span class="string">"#bookPrice"</span>).val()</span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> bookPublish = $(<span class="string">"#bookPublish"</span>).val()</span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> bookISBN = $(<span class="string">"#bookISBN"</span>).val()</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">var</span> addBookInfos = [].concat(bookName, bookAuthor, bookPrice, bookPublish, bookISBN);</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; addBookInfos.length; i++) &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (addBookInfos[i] === <span class="string">''</span>) &#123;</span></span><br><span class="line"><span class="actionscript">              alert(titles[i] + <span class="string">'内容不能为空'</span>)</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">          &#125;</span></span><br><span class="line"><span class="actionscript">          table.row.add([<span class="string">''</span>, bookName, bookAuthor, bookPrice, bookPublish, bookISBN]).draw();</span></span><br><span class="line"><span class="javascript">          $(<span class="string">"#addBookModal"</span>).find(<span class="string">'input'</span>).val(<span class="string">''</span>)</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="actionscript">      &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">'请输入内容'</span>)</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#addBooksInfo"</span>).click();    </span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#btn_add"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">'add'</span>);</span></span><br><span class="line"><span class="javascript">      $(<span class="string">"#addBook"</span>).modal()</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 编辑图书</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#btn_edit'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">'edit'</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">if</span> (table.rows(<span class="string">'.selected'</span>).data().length) &#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#editBookInfo"</span>).modal()</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> rowData = table.rows(<span class="string">'.selected'</span>).data()[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> inputs = $(<span class="string">"#editBookModal"</span>).find(<span class="string">'input'</span>)</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; inputs.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">          $(inputs[i]).val(rowData[i + <span class="number">1</span>])</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="actionscript">      &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">'请选择项目'</span>);</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 保存编辑</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#saveEdit"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> editBookName = $(<span class="string">"#editBookName"</span>).val()</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> editBookAuthor = $(<span class="string">"#editBookAuthor"</span>).val()</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> editBookPrice = $(<span class="string">"#editBookPrice"</span>).val()</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> editBookPublish = $(<span class="string">"#editBookPublish"</span>).val()</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> editBookISBN = $(<span class="string">"#editBookISBN"</span>).val()</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> newRowData = [].concat(editBookName, editBookAuthor, editBookPrice, editBookPublish, editBookISBN);</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> tds = <span class="built_in">Array</span>.prototype.slice.call($(<span class="string">'.selected td'</span>))</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; newRowData.length; i++) &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (newRowData[i] !== <span class="string">''</span>) &#123;</span></span><br><span class="line"><span class="undefined">          tds[i + 1].innerHTML = newRowData[i];</span></span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">          alert(titles[i] + <span class="string">'内容不能为空'</span>)</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">      &#125;    </span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 取消保存</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#cancelEdit"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">'cancelAdd'</span>);</span></span><br><span class="line"><span class="javascript">      $(<span class="string">"#editBookModal"</span>).find(<span class="string">'input'</span>).val(<span class="string">''</span>)</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 删除项目</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#btn_delete'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">if</span> (table.rows(<span class="string">'.selected'</span>).data().length) &#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#deleteBook"</span>).modal()</span></span><br><span class="line"><span class="actionscript">      &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">'请选择项目'</span>);</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 删除</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#delete'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">      table.row(<span class="string">'.selected'</span>).remove().draw(<span class="literal">false</span>);</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">  &#125;)</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近在做毕设，同学在做前端页面的时候使用到JQuery、DataTable和Bootstrap这些控件，然后自己又在刷题的时候遇到一个这个demo的实现，于是就自己去官网文档上学习了一下，尝试实现这个demo&lt;/p&gt;
&lt;p&gt;官方文档：&lt;a href=&quot;https://dat
      
    
    </summary>
    
      <category term="dataTable" scheme="https://rain120.github.io/categories/dataTable/"/>
    
    
      <category term="JQuery" scheme="https://rain120.github.io/tags/JQuery/"/>
    
      <category term="Bootstrap" scheme="https://rain120.github.io/tags/Bootstrap/"/>
    
      <category term="dataTable" scheme="https://rain120.github.io/tags/dataTable/"/>
    
  </entry>
  
  <entry>
    <title>Vue之网易云音乐横向菜单的实现</title>
    <link href="https://rain120.github.io/2018/06/30/horizontal-menu/"/>
    <id>https://rain120.github.io/2018/06/30/horizontal-menu/</id>
    <published>2018-06-30T12:25:22.000Z</published>
    <updated>2018-07-03T10:06:38.321Z</updated>
    
    <content type="html"><![CDATA[<p>之前在学习的时候有稍微捣鼓一下网易云音乐，主要是为了学习Vue，巩固基础知识，然后看到这个横向菜单，当然个人也喜欢看球，所以每次看腾讯NBA的时候总是会想这个是这样实现的，于是借助之前还没写完的demo，完成这个横向菜单的实现，废话不多说，先上效果图</p><p><img src="https://pic1.zhimg.com/v2-70d17ca415bac63ee97f4c435465052d_b.gif" alt="网易云音乐横向菜单"></p><p>从使用虎牙直播横向菜单的体验得到，我们的横向菜单的业务逻辑如下：</p><ol><li>滑动菜单，并选择菜单项；</li><li>选择某个菜单项，该菜单项居中（去除边界菜单项）</li></ol><p>我们的使用的better-scroll这个插件来实现，具体安装请参考<a href="https://ustbhuangyi.github.io/better-scroll/#/" target="_blank" rel="noopener">BetterScroll</a></p><p>前端DOM结构<br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mv-tabs"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tabs"</span> <span class="attr">ref</span>=<span class="string">"tabsWrapper"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">ref</span>=<span class="string">"tab"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(item, index) in tabs"</span> <span class="attr">:key</span>=<span class="string">"index"</span> @<span class="attr">click</span>=<span class="string">"selectItem(index)"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">tag</span>=<span class="string">"div"</span> <span class="attr">:to</span>=<span class="string">"item.to"</span> <span class="attr">class</span>=<span class="string">"tab-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tab-link"</span>&gt;</span></span><span class="template-variable">&#123;&#123;item.title&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><p>通过使用插件Vue来调试项目<br><img src="https://pic4.zhimg.com/80/v2-1c20983f89395468ddd860b50defb230_hd.jpg" alt="Vue DOM"></p><p>其中tabs包括菜单项名和它的路由<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">data</span> () &#123;</span><br><span class="line">    <span class="selector-tag">return</span> &#123;</span><br><span class="line">      <span class="attribute">tabs</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attribute">to</span>: <span class="string">'/mv/recommend-mv'</span>,</span><br><span class="line">          <span class="attribute">title</span>: <span class="string">'推荐'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attribute">to</span>: <span class="string">'/mv/music-mv'</span>,</span><br><span class="line">          <span class="attribute">title</span>: <span class="string">'音乐'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attribute">to</span>: <span class="string">'show-mv'</span>,</span><br><span class="line">          <span class="attribute">title</span>: <span class="string">'Show'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attribute">to</span>: <span class="string">'/mv/acg-mv'</span>,</span><br><span class="line">          <span class="attribute">title</span>: <span class="string">'二次元'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attribute">to</span>: <span class="string">'/mv/dance-mv'</span>,</span><br><span class="line">          <span class="attribute">title</span>: <span class="string">'舞蹈'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attribute">to</span>: <span class="string">'/mv/game-mv'</span>,</span><br><span class="line">          <span class="attribute">title</span>: <span class="string">'游戏'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attribute">to</span>: <span class="string">'/mv/mvs'</span>,</span><br><span class="line">          <span class="attribute">title</span>: <span class="string">'mv'</span></span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="attribute">mX</span>: <span class="number">0</span>, <span class="comment">// tab移动的距离</span></span><br><span class="line">      <span class="attribute">tabWidth</span>: <span class="number">80</span> <span class="comment">// 每个tab的宽度</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>样式<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">.mv-tabs</span><br><span class="line">    <span class="attribute">position</span> relative</span><br><span class="line">    <span class="attribute">top</span> -<span class="number">5.5rem</span></span><br><span class="line">    <span class="attribute">bottom</span> <span class="number">0</span></span><br><span class="line">    <span class="attribute">width</span> <span class="number">100%</span></span><br><span class="line">    .tabs</span><br><span class="line">      <span class="attribute">margin-top</span> <span class="number">3rem</span></span><br><span class="line">      <span class="attribute">height</span> <span class="number">2.5rem</span></span><br><span class="line">      <span class="attribute">width</span> <span class="number">100%</span></span><br><span class="line">      <span class="attribute">line-height</span> <span class="number">2.5rem</span></span><br><span class="line">      <span class="attribute">box-sizing</span> border-box</span><br><span class="line">      <span class="attribute">overflow</span> hidden</span><br><span class="line">      <span class="attribute">white-space</span> nowrap</span><br><span class="line">      .tab-item</span><br><span class="line">        <span class="attribute">float</span> left</span><br><span class="line">        <span class="attribute">width</span> <span class="number">80px</span></span><br><span class="line">        <span class="attribute">height</span> <span class="number">40px</span></span><br><span class="line">        <span class="attribute">text-align</span> center</span><br><span class="line">        .tab-link</span><br><span class="line">          <span class="attribute">padding-bottom</span> <span class="number">5px</span></span><br><span class="line">          <span class="attribute">color</span> <span class="number">#333333</span></span><br><span class="line">        &amp;.router-link-active</span><br><span class="line">          <span class="attribute">color</span> <span class="number">#d33a31</span></span><br><span class="line">          <span class="attribute">border-bottom</span> <span class="number">2px</span> solid <span class="number">#d33a31</span></span><br><span class="line">          <span class="attribute">box-sizing</span> border-box</span><br></pre></td></tr></table></figure></p><p>样式和DOM结构就不详细讲了，具体讲实现吧<br>首先需要计算出这个菜单中所有内容的width，也就是包裹这个菜单的容器；接着初始化better-scroll，并忽略该实例对象的垂直方向的滑动.<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">    _initMenu () &#123;</span><br><span class="line">      let tabsWidth = <span class="keyword">this</span>.tabWidth</span><br><span class="line">      let width = <span class="keyword">this</span>.tabs.length * tabsWidth</span><br><span class="line">      <span class="keyword">this</span>.$refs.tab.style.width = `$&#123;width&#125;px`</span><br><span class="line">      <span class="keyword">this</span>.$nextTick(() =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">this</span>.scroll) &#123;</span><br><span class="line">          <span class="keyword">this</span>.scroll = new BScroll(<span class="keyword">this</span>.$refs.tabsWrapper, &#123;</span><br><span class="line">            scrollX: <span class="literal">true</span>,</span><br><span class="line">            eventPassthrough: <span class="string">'vertical'</span> <span class="comment">// 忽略这个实例对象的垂直滑动事件</span></span><br><span class="line">          &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">this</span>.scroll.refresh()</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>这里是第二个业务逻辑的思路（应该会有更好的思路，求大佬指点）</p><p>我的思路是这样的：每一个菜单项都会有各自的点击移动操作，所以我是根据当前tabs的位置，通过点击事件将tabs移动到它相应的位置，例如，中间菜单项在点击时会移动到居中的位置。<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">    selectItem (index) &#123;</span><br><span class="line">      let tabs = <span class="keyword">this</span>.$refs.tab</span><br><span class="line">      let moveX = +tabs.style.transform.replace(/[^<span class="number">0</span><span class="number">-9</span>\-,]/g, <span class="string">''</span>).split(<span class="string">','</span>)[<span class="number">0</span>]</span><br><span class="line">      switch (index) &#123;</span><br><span class="line">        case <span class="number">0</span>:</span><br><span class="line">          <span class="keyword">if</span> (moveX &lt;= <span class="number">0</span> &amp;&amp; moveX &gt; -<span class="keyword">this</span>.tabWidth) &#123;</span><br><span class="line">            <span class="keyword">this</span>.mX = <span class="number">0</span></span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        case <span class="number">1</span>:</span><br><span class="line">          <span class="keyword">if</span> (moveX &lt;= <span class="number">0</span> &amp;&amp; moveX &gt; -<span class="keyword">this</span>.tabWidth * <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.mX = <span class="number">0</span></span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        case <span class="number">2</span>:</span><br><span class="line">          <span class="keyword">if</span> (moveX &lt; <span class="number">0</span> &amp;&amp; moveX &gt;= -<span class="keyword">this</span>.tabWidth * <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.mX = <span class="number">0</span></span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        case <span class="number">3</span>:</span><br><span class="line">          <span class="keyword">if</span> (moveX &lt;= <span class="number">0</span> &amp;&amp; moveX &gt;= -<span class="keyword">this</span>.tabWidth * <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.mX = -<span class="keyword">this</span>.tabWidth</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        case <span class="number">4</span>:</span><br><span class="line">          <span class="keyword">if</span> (moveX &lt;= <span class="number">0</span> &amp;&amp; moveX &gt;= -<span class="keyword">this</span>.tabWidth * <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.mX = -<span class="keyword">this</span>.tabWidth * <span class="number">2</span></span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (moveX === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.mX = -<span class="keyword">this</span>.tabWidth * <span class="number">2</span></span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        case <span class="number">5</span>:</span><br><span class="line">          <span class="keyword">if</span> (moveX &lt; <span class="number">0</span> &amp;&amp; moveX &gt; -<span class="keyword">this</span>.tabWidth * <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.mX = -<span class="keyword">this</span>.tabWidth * <span class="number">2</span></span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        case <span class="number">6</span>:</span><br><span class="line">          <span class="keyword">if</span> (moveX &gt; -<span class="keyword">this</span>.tabWidth * <span class="number">2</span> &amp;&amp; moveX &lt; -<span class="keyword">this</span>.tabWidth * <span class="number">3</span> / <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.mX = -<span class="keyword">this</span>.tabWidth * <span class="number">2</span> + <span class="number">10</span></span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">      &#125;</span><br><span class="line">      tabs.style.transform = `translate($&#123;<span class="keyword">this</span>.mX&#125;px, <span class="number">0</span>)`</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p><img src="https://pic4.zhimg.com/80/v2-4d0231f220cee3f259b342c80f16da63_hd.jpg" alt="渲染的DOM结构"></p><p>很多时候我们在使用better-scroll的时候，发现这个实例对象已经初始化，但是不能滑动，是因为，Vue是异步更新数据的，所以我们需要异步计算它实际内容的宽度或者高度，Vue提供一个了this.$nextTick()这个hock来实现，这个API是在下次 DOM 更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，获取更新后的 DOM。</p><p>官方解释：<a href="https://cn.vuejs.org/v2/api/#Vue-nextTick" target="_blank" rel="noopener">$nextTick</a></p><p>当生命钩子mounted触发时，初始化better-scroll<br><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mounted () &#123;</span><br><span class="line">    <span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>._initMenu()</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>全部代码<br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mv-tabs"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tabs"</span> <span class="attr">ref</span>=<span class="string">"tabsWrapper"</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">ref</span>=<span class="string">"tab"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(item, index) in tabs"</span> <span class="attr">:key</span>=<span class="string">"index"</span> @<span class="attr">click</span>=<span class="string">"selectItem(index)"</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">tag</span>=<span class="string">"div"</span> <span class="attr">:to</span>=<span class="string">"item.to"</span> <span class="attr">class</span>=<span class="string">"tab-item"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tab-link"</span>&gt;</span></span><span class="template-variable">&#123;&#123;item.title&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span></span><br><span class="line"><span class="xml">import BScroll from 'better-scroll'</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">export default &#123;</span></span><br><span class="line"><span class="xml">  data () &#123;</span></span><br><span class="line"><span class="xml">    return &#123;</span></span><br><span class="line"><span class="xml">      tabs: [</span></span><br><span class="line"><span class="xml">        &#123;</span></span><br><span class="line"><span class="xml">          to: '/mv/recommend-mv',</span></span><br><span class="line"><span class="xml">          title: '推荐'</span></span><br><span class="line"><span class="xml">        &#125;,</span></span><br><span class="line"><span class="xml">        &#123;</span></span><br><span class="line"><span class="xml">          to: '/mv/music-mv',</span></span><br><span class="line"><span class="xml">          title: '音乐'</span></span><br><span class="line"><span class="xml">        &#125;,</span></span><br><span class="line"><span class="xml">        &#123;</span></span><br><span class="line"><span class="xml">          to: 'show-mv',</span></span><br><span class="line"><span class="xml">          title: 'Show'</span></span><br><span class="line"><span class="xml">        &#125;,</span></span><br><span class="line"><span class="xml">        &#123;</span></span><br><span class="line"><span class="xml">          to: '/mv/acg-mv',</span></span><br><span class="line"><span class="xml">          title: '二次元'</span></span><br><span class="line"><span class="xml">        &#125;,</span></span><br><span class="line"><span class="xml">        &#123;</span></span><br><span class="line"><span class="xml">          to: '/mv/dance-mv',</span></span><br><span class="line"><span class="xml">          title: '舞蹈'</span></span><br><span class="line"><span class="xml">        &#125;,</span></span><br><span class="line"><span class="xml">        &#123;</span></span><br><span class="line"><span class="xml">          to: '/mv/game-mv',</span></span><br><span class="line"><span class="xml">          title: '游戏'</span></span><br><span class="line"><span class="xml">        &#125;,</span></span><br><span class="line"><span class="xml">        &#123;</span></span><br><span class="line"><span class="xml">          to: '/mv/mvs',</span></span><br><span class="line"><span class="xml">          title: 'mv'</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">      ],</span></span><br><span class="line"><span class="xml">      mX: 0,</span></span><br><span class="line"><span class="xml">      tabWidth: 80</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">  &#125;,</span></span><br><span class="line"><span class="xml">  mounted () &#123;</span></span><br><span class="line"><span class="xml">    this.$nextTick(() =&gt; &#123;</span></span><br><span class="line"><span class="xml">      this._initMenu()</span></span><br><span class="line"><span class="xml">    &#125;)</span></span><br><span class="line"><span class="xml">  &#125;,</span></span><br><span class="line"><span class="xml">  methods: &#123;</span></span><br><span class="line"><span class="xml">    selectItem (index) &#123;</span></span><br><span class="line"><span class="xml">      let tabs = this.$refs.tab</span></span><br><span class="line"><span class="xml">      let moveX = +tabs.style.transform.replace(/[^0-9\-,]/g, '').split(',')[0]</span></span><br><span class="line"><span class="xml">      switch (index) &#123;</span></span><br><span class="line"><span class="xml">        case 0:</span></span><br><span class="line"><span class="xml">          if (moveX <span class="tag">&lt;<span class="name">=</span> <span class="attr">0</span> &amp;&amp; <span class="attr">moveX</span> &gt;</span> -this.tabWidth) &#123;</span></span><br><span class="line"><span class="xml">            this.mX = 0</span></span><br><span class="line"><span class="xml">          &#125;</span></span><br><span class="line"><span class="xml">          break</span></span><br><span class="line"><span class="xml">        case 1:</span></span><br><span class="line"><span class="xml">          if (moveX <span class="tag">&lt;<span class="name">=</span> <span class="attr">0</span> &amp;&amp; <span class="attr">moveX</span> &gt;</span> -this.tabWidth * 2) &#123;</span></span><br><span class="line"><span class="xml">            this.mX = 0</span></span><br><span class="line"><span class="xml">          &#125;</span></span><br><span class="line"><span class="xml">          break</span></span><br><span class="line"><span class="xml">        case 2:</span></span><br><span class="line"><span class="xml">          if (moveX <span class="tag">&lt; <span class="attr">0</span> &amp;&amp; <span class="attr">moveX</span> &gt;</span>= -this.tabWidth * 2) &#123;</span></span><br><span class="line"><span class="xml">            this.mX = 0</span></span><br><span class="line"><span class="xml">          &#125;</span></span><br><span class="line"><span class="xml">          break</span></span><br><span class="line"><span class="xml">        case 3:</span></span><br><span class="line"><span class="xml">          if (moveX <span class="tag">&lt;<span class="name">=</span> <span class="attr">0</span> &amp;&amp; <span class="attr">moveX</span> &gt;</span>= -this.tabWidth * 2) &#123;</span></span><br><span class="line"><span class="xml">            this.mX = -this.tabWidth</span></span><br><span class="line"><span class="xml">          &#125;</span></span><br><span class="line"><span class="xml">          break</span></span><br><span class="line"><span class="xml">        case 4:</span></span><br><span class="line"><span class="xml">          if (moveX <span class="tag">&lt;<span class="name">=</span> <span class="attr">0</span> &amp;&amp; <span class="attr">moveX</span> &gt;</span>= -this.tabWidth * 2) &#123;</span></span><br><span class="line"><span class="xml">            this.mX = -this.tabWidth * 2</span></span><br><span class="line"><span class="xml">          &#125; else if (moveX === 0) &#123;</span></span><br><span class="line"><span class="xml">            this.mX = -this.tabWidth * 2</span></span><br><span class="line"><span class="xml">          &#125;</span></span><br><span class="line"><span class="xml">          break</span></span><br><span class="line"><span class="xml">        case 5:</span></span><br><span class="line"><span class="xml">          if (moveX <span class="tag">&lt; <span class="attr">0</span> &amp;&amp; <span class="attr">moveX</span> &gt;</span> -this.tabWidth * 2) &#123;</span></span><br><span class="line"><span class="xml">            this.mX = -this.tabWidth * 2</span></span><br><span class="line"><span class="xml">          &#125;</span></span><br><span class="line"><span class="xml">          break</span></span><br><span class="line"><span class="xml">        case 6:</span></span><br><span class="line"><span class="xml">          if (moveX &gt; -this.tabWidth * 2 &amp;&amp; moveX <span class="tag">&lt; <span class="attr">-this.tabWidth</span> * <span class="attr">3</span> / <span class="attr">2</span>) &#123;</span></span></span><br><span class="line"><span class="xml">            this.mX = -this.tabWidth * 2 + 10</span></span><br><span class="line"><span class="xml">          &#125;</span></span><br><span class="line"><span class="xml">          break</span></span><br><span class="line"><span class="xml">        default:</span></span><br><span class="line"><span class="xml">          break</span></span><br><span class="line"><span class="xml">      &#125;</span></span><br><span class="line"><span class="xml">      tabs.style.transform = `translate($&#123;this.mX&#125;px, 0)`</span></span><br><span class="line"><span class="xml">    &#125;,</span></span><br><span class="line"><span class="xml">    _initMenu () &#123;</span></span><br><span class="line"><span class="xml">      let tabsWidth = this.tabWidth</span></span><br><span class="line"><span class="xml">      let width = this.tabs.length * tabsWidth</span></span><br><span class="line"><span class="xml">      this.$refs.tab.style.width = `$&#123;width&#125;px`</span></span><br><span class="line"><span class="xml">      this.$nextTick(() =&gt; &#123;</span></span><br><span class="line"><span class="xml">        if (!this.scroll) &#123;</span></span><br><span class="line"><span class="xml">          this.scroll = new BScroll(this.$refs.tabsWrapper, &#123;</span></span><br><span class="line"><span class="xml">            scrollX: true,</span></span><br><span class="line"><span class="xml">            eventPassthrough: 'vertical'</span></span><br><span class="line"><span class="xml">          &#125;)</span></span><br><span class="line"><span class="xml">        &#125; else &#123;</span></span><br><span class="line"><span class="xml">          this.scroll.refresh()</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">      &#125;)</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">"stylus"</span> <span class="attr">scoped</span>&gt;</span><span class="undefined"></span></span></span><br><span class="line"><span class="xml">  .mv-tabs</span></span><br><span class="line"><span class="xml">    position relative</span></span><br><span class="line"><span class="xml">    top -5.5rem</span></span><br><span class="line"><span class="xml">    bottom 0</span></span><br><span class="line"><span class="xml">    width 100%</span></span><br><span class="line"><span class="xml">    .tabs</span></span><br><span class="line"><span class="xml">      margin-top 3rem</span></span><br><span class="line"><span class="xml">      height 2.5rem</span></span><br><span class="line"><span class="xml">      width 100%</span></span><br><span class="line"><span class="xml">      line-height 2.5rem</span></span><br><span class="line"><span class="xml">      box-sizing border-box</span></span><br><span class="line"><span class="xml">      overflow hidden</span></span><br><span class="line"><span class="xml">      white-space nowrap</span></span><br><span class="line"><span class="xml">      .tab-item</span></span><br><span class="line"><span class="xml">        float left</span></span><br><span class="line"><span class="xml">        width 80px</span></span><br><span class="line"><span class="xml">        height 40px</span></span><br><span class="line"><span class="xml">        text-align center</span></span><br><span class="line"><span class="xml">        .tab-link</span></span><br><span class="line"><span class="xml">          padding-bottom 5px</span></span><br><span class="line"><span class="xml">          color #333333</span></span><br><span class="line"><span class="xml">        &amp;.router-link-active</span></span><br><span class="line"><span class="xml">          color #d33a31</span></span><br><span class="line"><span class="xml">          border-bottom 2px solid #d33a31</span></span><br><span class="line"><span class="xml">          box-sizing border-box</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前在学习的时候有稍微捣鼓一下网易云音乐，主要是为了学习Vue，巩固基础知识，然后看到这个横向菜单，当然个人也喜欢看球，所以每次看腾讯NBA的时候总是会想这个是这样实现的，于是借助之前还没写完的demo，完成这个横向菜单的实现，废话不多说，先上效果图&lt;/p&gt;
&lt;p&gt;&lt;img
      
    
    </summary>
    
      <category term="Vue" scheme="https://rain120.github.io/categories/Vue/"/>
    
    
      <category term="Vue" scheme="https://rain120.github.io/tags/Vue/"/>
    
      <category term="better-scroll" scheme="https://rain120.github.io/tags/better-scroll/"/>
    
      <category term="网易云音乐" scheme="https://rain120.github.io/tags/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90/"/>
    
      <category term="横向菜单" scheme="https://rain120.github.io/tags/%E6%A8%AA%E5%90%91%E8%8F%9C%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>Vue之网易云音乐PC版轮播图的实现</title>
    <link href="https://rain120.github.io/2018/06/25/netease-slider/"/>
    <id>https://rain120.github.io/2018/06/25/netease-slider/</id>
    <published>2018-06-25T10:30:29.000Z</published>
    <updated>2018-08-11T07:42:31.668Z</updated>
    
    <content type="html"><![CDATA[<p>最近在刷网易云音乐歌单时发现首页的轮播图很有意思，正好自己想尝试做一个PC版的网易云音乐，于是就是使用Vue去做这个demo，废话少说，我要出招了，接招吧</p><p><img src="https://image-static.segmentfault.com/297/359/2973590548-5b3b3f4f42deb" alt="网易云音乐PC版轮播图"></p><h4 id="页面的DOM结构"><a href="#页面的DOM结构" class="headerlink" title="页面的DOM结构"></a>页面的DOM结构</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"slider-container"</span> ref=<span class="symbol">'slide</span>r'</span><br><span class="line">       :style=<span class="string">"sliderStyle"</span></span><br><span class="line">       <span class="meta">@mouseover</span>=<span class="string">"pause()"</span></span><br><span class="line">       <span class="meta">@mouseout</span>=<span class="string">"play()"</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"slider-content"</span> :<span class="class"><span class="keyword">class</span></span>=<span class="string">"mask ? 'mask' : ''"</span>&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"slider"</span> v-<span class="keyword">for</span>=<span class="string">"(item, index) in list"</span></span><br><span class="line">        :key=<span class="string">"index"</span></span><br><span class="line">        :<span class="class"><span class="keyword">class</span></span>=<span class="string">"setClass(index)"</span></span><br><span class="line">        <span class="meta">@click</span>=<span class="string">"onClick(index)"</span> :style=<span class="string">"setBGImg(item.src)"</span>&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;i v-show=<span class="string">"arrow"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"iconfont icon-left"</span> <span class="meta">@click</span>=<span class="string">"prev()"</span>&gt;&lt;/i&gt;</span><br><span class="line">      &lt;i v-show=<span class="string">"arrow"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"iconfont icon-right"</span> <span class="meta">@click</span>=<span class="string">"next()"</span>&gt;&lt;/i&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"dots"</span> v-<span class="keyword">if</span>=<span class="string">"dots"</span>&gt;</span><br><span class="line">      &lt;span v-<span class="keyword">for</span>=<span class="string">"(item, index) in list"</span> :key=<span class="string">"index"</span></span><br><span class="line">        :style=<span class="string">"setActiveDot(index)"</span></span><br><span class="line">        <span class="meta">@mouseover</span>=<span class="string">"currentIndex = index"</span>&gt;&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h4 id="Slider-container的样式-Stylus"><a href="#Slider-container的样式-Stylus" class="headerlink" title="Slider-container的样式(Stylus)"></a>Slider-container的样式(Stylus)</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.slider-container</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span></span><br><span class="line">  <span class="attribute">text-align</span>: center</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">0</span></span><br><span class="line">  <span class="attribute">position</span>: relative</span><br></pre></td></tr></table></figure><p>这个子组件主要分为两块。</p><ol><li>轮播图，其中它们的业务逻辑是</li></ol><ul><li>自动切换</li><li>左右icon切换轮播图</li><li>点击前后轮播图切换轮播图</li><li>鼠标滑动到轮播图停止轮播，离开后继续轮播</li></ul><h4 id="Slider-content的DOM结构"><a href="#Slider-content的DOM结构" class="headerlink" title="Slider-content的DOM结构"></a>Slider-content的DOM结构</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"slider-content"</span> :<span class="class"><span class="keyword">class</span></span>=<span class="string">"mask ? 'mask' : ''"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"slider"</span> v-<span class="keyword">for</span>=<span class="string">"(item, index) in list"</span></span><br><span class="line">    :key=<span class="string">"index"</span></span><br><span class="line">    :<span class="class"><span class="keyword">class</span></span>=<span class="string">"setClass(index)"</span></span><br><span class="line">    <span class="meta">@click</span>=<span class="string">"onClick(index)"</span> :style=<span class="string">"setBGImg(item.src)"</span>&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;i v-show=<span class="string">"arrow"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"iconfont icon-left"</span> <span class="meta">@click</span>=<span class="string">"prev()"</span>&gt;&lt;/i&gt;</span><br><span class="line">  &lt;i v-show=<span class="string">"arrow"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"iconfont icon-right"</span> <span class="meta">@click</span>=<span class="string">"next()"</span>&gt;&lt;/i&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h4 id="Slider-content的样式-Stylus"><a href="#Slider-content的样式-Stylus" class="headerlink" title="Slider-content的样式(Stylus)"></a>Slider-content的样式(Stylus)</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">.slider-<span class="attribute">content</span></span><br><span class="line">    <span class="attribute">position</span>: relative</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line">    <span class="attribute">height</span>: calc(<span class="number">100%</span> - <span class="number">20px</span>)</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0%</span></span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0%</span></span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span></span><br><span class="line">    <span class="attribute">background-size</span>: inherit</span><br><span class="line">    <span class="selector-class">.slider</span> </span><br><span class="line">      <span class="attribute">position</span>: absolute</span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">0</span></span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">0</span></span><br><span class="line">      <span class="attribute">top</span>: <span class="number">0</span></span><br><span class="line">      <span class="attribute">left</span>: <span class="number">50%</span></span><br><span class="line">      <span class="attribute">width</span>: <span class="number">65%</span></span><br><span class="line">      <span class="attribute">height</span>: <span class="number">100%</span></span><br><span class="line">      <span class="attribute">transition</span>: <span class="number">500ms</span> all ease-in-out</span><br><span class="line">      <span class="attribute">background-color</span>: <span class="number">#fff</span></span><br><span class="line">      <span class="attribute">background-repeat</span>: no-repeat</span><br><span class="line">      <span class="attribute">background-position</span>: center</span><br><span class="line">      <span class="attribute">background-size</span>: inherit</span><br><span class="line">      <span class="attribute">transform</span>: translate3d(-<span class="number">50%</span>,<span class="number">0</span>,-<span class="number">80px</span>)</span><br><span class="line">      <span class="attribute">z-index</span>: <span class="number">1</span></span><br><span class="line">      &amp;:before</span><br><span class="line">        <span class="attribute">position</span>: absolute</span><br><span class="line">        <span class="attribute">content</span>: <span class="string">""</span></span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100%</span></span><br><span class="line">        <span class="attribute">top</span>: <span class="number">0</span></span><br><span class="line">        <span class="attribute">left</span>: <span class="number">0</span></span><br><span class="line">        <span class="attribute">background-color</span>: rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">        <span class="attribute">transition-delay</span>: <span class="number">100ms</span>!important</span><br><span class="line">        <span class="attribute">transition</span>: all <span class="number">500ms</span></span><br><span class="line">        <span class="attribute">cursor</span>: pointer</span><br><span class="line">      &amp;.active</span><br><span class="line">        <span class="attribute">transform</span>: translate3d(-<span class="number">50%</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">        <span class="attribute">z-index</span>: <span class="number">20</span></span><br><span class="line">      &amp;.prev</span><br><span class="line">        <span class="attribute">transform</span>: translate3d(-<span class="number">75%</span>, <span class="number">0</span>, -<span class="number">100px</span>)</span><br><span class="line">        <span class="attribute">z-index</span>: <span class="number">19</span></span><br><span class="line">      &amp;.next</span><br><span class="line">        <span class="attribute">transform</span>: translate3d(-<span class="number">25%</span>, <span class="number">0</span>, -<span class="number">100px</span>)</span><br><span class="line">        <span class="attribute">z-index</span>: <span class="number">18</span></span><br><span class="line">    i</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">17.5%</span></span><br><span class="line">      <span class="attribute">display</span>: none</span><br><span class="line">      <span class="attribute">position</span>: absolute</span><br><span class="line">      <span class="attribute">top</span>: <span class="number">40%</span></span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">22px</span></span><br><span class="line">      <span class="attribute">color</span>: rgba(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.5</span>)</span><br><span class="line">      <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">24px</span> rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>)</span><br><span class="line">      <span class="attribute">cursor</span>: pointer</span><br><span class="line">      <span class="attribute">z-index</span>: <span class="number">21</span></span><br><span class="line">      &amp;:first-child</span><br><span class="line">        <span class="attribute">left</span>: <span class="number">0</span></span><br><span class="line">      &amp;:last-child</span><br><span class="line">        <span class="attribute">right</span>: <span class="number">0</span></span><br><span class="line">    &amp;:hover</span><br><span class="line">      i</span><br><span class="line">        <span class="attribute">color</span>: rgba(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.8</span>)</span><br><span class="line">        <span class="attribute">display</span>: block</span><br><span class="line">    &amp;.<span class="attribute">mask</span></span><br><span class="line">      <span class="selector-class">.slider</span> </span><br><span class="line">        &amp;<span class="selector-class">.prev</span>, &amp;.next</span><br><span class="line">          &amp;:before</span><br><span class="line">            <span class="attribute">background-color</span>: rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.50</span>)</span><br></pre></td></tr></table></figure><ol><li>底部的dot， 其中它们的业务逻辑是</li></ol><ul><li>当前轮播图对应位置的dot高亮</li><li>鼠标移动到相应的dot上切换对应位置的轮播图</li></ul><h4 id="Dots的DOM结构"><a href="#Dots的DOM结构" class="headerlink" title="Dots的DOM结构"></a>Dots的DOM结构</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"dots"</span> v-<span class="keyword">if</span>=<span class="string">"dots"</span>&gt;</span><br><span class="line">  &lt;span v-<span class="keyword">for</span>=<span class="string">"(item, index) in list"</span> :key=<span class="string">"index"</span></span><br><span class="line">    :style=<span class="string">"setActiveDot(index)"</span></span><br><span class="line">    @mouseover=<span class="string">"currentIndex = index"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Dots的样式-Stylus"><a href="#Dots的样式-Stylus" class="headerlink" title="Dots的样式(Stylus)"></a>Dots的样式(Stylus)</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.dots</span> </span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line">  <span class="attribute">height</span>: <span class="number">20px</span></span><br><span class="line">  span</span><br><span class="line">    <span class="attribute">display</span>: inline-block</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20px</span></span><br><span class="line">    <span class="attribute">height</span>: <span class="number">2px</span></span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">1px</span> <span class="number">3px</span></span><br><span class="line">    <span class="attribute">cursor</span>: pointer</span><br></pre></td></tr></table></figure><p>上面是页面的DOM结构和表现的实现代码，接下来我们要讲的是连招的实现，小心啦，我要摸眼W + R3了。<br>上面我们讲到轮播图的业务逻辑，接下来，我们就讲讲如何实现的的吧</p><h4 id="自动轮播"><a href="#自动轮播" class="headerlink" title="自动轮播"></a>自动轮播</h4><p><img src="https://pic2.zhimg.com/v2-4c50c0ab424efb6f4407750a5363a064_b.gif" alt="自动轮播"><br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">play () &#123;</span><br><span class="line">  <span class="keyword">this</span>.pause();</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.autoPlay) &#123;</span><br><span class="line">    <span class="keyword">this</span>.timer = setInterval(()=&gt;&#123;</span><br><span class="line">      <span class="keyword">this</span>.next();</span><br><span class="line">    &#125;, <span class="keyword">this</span>.interval)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="暂停轮播"><a href="#暂停轮播" class="headerlink" title="暂停轮播"></a>暂停轮播</h4><p><img src="https://image-static.segmentfault.com/884/754/88475401-5b3b3f495267a" alt="暂停轮播"><br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pause () &#123;</span><br><span class="line">  clearInterval(<span class="keyword">this</span>.timer);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="Icon切换轮播图"><a href="#Icon切换轮播图" class="headerlink" title="Icon切换轮播图"></a>Icon切换轮播图</h4><p><img src="https://image-static.segmentfault.com/286/689/286689500-5b3b3f4bbabc4" alt="Icon切换轮播图"><br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">next () &#123;</span><br><span class="line">  <span class="keyword">this</span>.currentIndex = ++<span class="keyword">this</span>.currentIndex % <span class="keyword">this</span>.list.length;</span><br><span class="line">&#125;,</span><br><span class="line">prev () &#123;</span><br><span class="line">  <span class="keyword">this</span>.currentIndex = <span class="keyword">this</span>.currentIndex === <span class="number">0</span> ? <span class="keyword">this</span>.list.length - <span class="number">1</span> : <span class="keyword">this</span>.currentIndex - <span class="number">1</span>;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></p><h4 id="前后轮播图的切换轮播图"><a href="#前后轮播图的切换轮播图" class="headerlink" title="前后轮播图的切换轮播图"></a>前后轮播图的切换轮播图</h4><p><img src="https://image-static.segmentfault.com/285/640/285640959-5b3b3f4e30562" alt="前后轮播图的切换轮播图"><br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">onClick (i) &#123;</span><br><span class="line">  <span class="keyword">if</span> (i === <span class="keyword">this</span>.currentIndex)&#123;</span><br><span class="line">    <span class="keyword">this</span>.$emit(<span class="string">'sliderClick'</span>, i);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    let currentClickClassName = <span class="keyword">this</span>.sliderDomList[i].className.split(<span class="string">' '</span>)[<span class="number">1</span>]</span><br><span class="line">    console.log(currentClickClassName)</span><br><span class="line">    <span class="keyword">if</span> (currentClickClassName === <span class="string">'next'</span>) &#123;</span><br><span class="line">      <span class="keyword">this</span>.next()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.prev()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="dots轮播图的切换轮播图"><a href="#dots轮播图的切换轮播图" class="headerlink" title="dots轮播图的切换轮播图"></a>dots轮播图的切换轮播图</h4><p><img src="https://image-static.segmentfault.com/368/114/3681145341-5b3b3f4e4233e" alt="dots轮播图的切换轮播图"><br>这里比较简单，只需要设置它的鼠标事件即可<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@mouseover</span>=<span class="string">"currentIndex = index"</span></span><br></pre></td></tr></table></figure></p><p>到这里，基本上我们提出的业务逻辑原理都已经实现了，到时候我会将代码整理完了commit到github上，现在正在整理ing，谢谢。</p><p>代码传送门：<a href="https://github.com/Rain120/vue-study/blob/master/my-project/src/components/barousel.vue" target="_blank" rel="noopener">Vue网易云音乐轮播图的实现</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近在刷网易云音乐歌单时发现首页的轮播图很有意思，正好自己想尝试做一个PC版的网易云音乐，于是就是使用Vue去做这个demo，废话少说，我要出招了，接招吧&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://image-static.segmentfault.com/297/
      
    
    </summary>
    
      <category term="Vue" scheme="https://rain120.github.io/categories/Vue/"/>
    
    
      <category term="Vue" scheme="https://rain120.github.io/tags/Vue/"/>
    
      <category term="better-scroll" scheme="https://rain120.github.io/tags/better-scroll/"/>
    
      <category term="网易云音乐" scheme="https://rain120.github.io/tags/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90/"/>
    
      <category term="轮播图" scheme="https://rain120.github.io/tags/%E8%BD%AE%E6%92%AD%E5%9B%BE/"/>
    
  </entry>
  
</feed>
